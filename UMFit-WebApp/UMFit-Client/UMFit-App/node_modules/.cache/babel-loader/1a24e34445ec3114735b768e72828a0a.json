{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/components/LogIn.tsx\";\nimport React, { useState } from 'react';\nimport sha256 from \"fast-sha256\";\nimport './css/LogIn.css';\nimport { IonInput, IonText, IonButton, IonLoading } from '@ionic/react';\nimport { authenticate } from '../models/API/UserAPI';\nimport { formatUser } from '../models/Other/User';\nimport { Redirect } from 'react-router-dom';\n\nconst LogIn = () => {\n  const [showLoading, setShowLoading] = useState(false);\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [logged, setLogged] = useState(false);\n  setTimeout(() => {\n    setShowLoading(false);\n  }, 2000);\n\n  if (logged === true) {\n    //Redirect to user page\n    alert(\"Redirecting to /user...\");\n    return React.createElement(Redirect, {\n      to: \"/user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  } else return React.createElement(\"div\", {\n    id: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"phrase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(IonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"O teu gin\\xE1sio da UMinho...\")), React.createElement(\"div\", {\n    id: \"input-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(IonInput, {\n    required: true,\n    type: \"email\",\n    id: \"email-input\",\n    placeholder: \"E-Mail\",\n    value: emailValue,\n    onIonChange: e => {\n      setEmailValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(IonInput, {\n    required: true,\n    type: \"password\",\n    id: \"pass-input\",\n    placeholder: \"Password\",\n    value: passwordValue,\n    onIonChange: e => {\n      setPasswordValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(IonButton, {\n    expand: \"block\",\n    type: \"submit\",\n    id: \"login-button\",\n    onClick: () => {\n      setShowLoading(true);\n      let pass_enc = new TextEncoder();\n      let encoded = pass_enc.encode(passwordValue);\n      let hash256 = Buffer.from(sha256(encoded)).toString('hex').toUpperCase();\n      console.log(\"Para a API: /api/user/authenticate\");\n      console.log(\"> E-Mail: \" + emailValue);\n      console.log(\"> Password: \" + passwordValue);\n      console.log(\"> Password (sha256): \" + hash256); //request\n\n      let response = authenticate(emailValue, passwordValue);\n      response.then(function (value) {\n        //Success OK = 200    \n        if (value.status === 200) {\n          console.log(\"Resposta LOGIN OK\");\n          var json = value.json();\n          json.then(function (value) {\n            let user = formatUser(value);\n            console.log(user);\n            setLogged(true);\n          }); //Login error: 400    \n        } else {\n          console.log(value.status + \" Resposta LOGIN not OK\");\n          alert(value);\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Log-In\"), React.createElement(IonLoading, {\n    isOpen: showLoading,\n    onDidDismiss: () => setShowLoading(false),\n    message: 'Espere um momento...',\n    duration: 5000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n};\n\nexport default LogIn;","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/components/LogIn.tsx"],"names":["React","useState","sha256","IonInput","IonText","IonButton","IonLoading","authenticate","formatUser","Redirect","LogIn","showLoading","setShowLoading","emailValue","setEmailValue","passwordValue","setPasswordValue","logged","setLogged","setTimeout","alert","e","target","value","pass_enc","TextEncoder","encoded","encode","hash256","Buffer","from","toString","toUpperCase","console","log","response","then","status","json","user"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\n\nimport sha256 from \"fast-sha256\";\n\nimport './css/LogIn.css';\nimport { IonInput, IonText, IonButton, IonLoading } from '@ionic/react';\nimport { authenticate } from '../models/API/UserAPI';\nimport { formatUser, User } from '../models/Other/User';\nimport { Redirect } from 'react-router-dom';\n\nconst LogIn: React.FC = () => {\n\n    const [showLoading, setShowLoading] = useState(false);\n    const [emailValue, setEmailValue] = useState<string>(\"\");\n    const [passwordValue, setPasswordValue] = useState<string>(\"\");\n\n    const [logged, setLogged] = useState(false);\n\n    setTimeout(() => {\n        setShowLoading(false);\n    }, 2000);\n\n    if (logged === true) {\n        \n        //Redirect to user page\n\n        alert(\"Redirecting to /user...\");\n        \n        return <Redirect to='/user' />;\n    \n    } else return (\n\n        <div id=\"login-form\">\n            <div id=\"Logo\"></div>\n            <div id=\"phrase\">\n                <IonText>O teu gin√°sio da UMinho...</IonText>\n            </div>\n        <div id=\"input-form\">\n            <br></br>\n            <IonInput required type=\"email\" id=\"email-input\" placeholder=\"E-Mail\"\n            value={emailValue}\n            onIonChange={(e) => {\n                setEmailValue((e.target as HTMLInputElement).value);\n            }}>\n            </IonInput>\n            <br></br>\n            <IonInput required type=\"password\" id=\"pass-input\" placeholder=\"Password\"\n            value={passwordValue}\n            onIonChange={(e) => {\n                setPasswordValue((e.target as HTMLInputElement).value);\n            }}>\n            </IonInput>\n        </div>\n        <IonButton expand=\"block\" type=\"submit\" id=\"login-button\" onClick={() => {\n                \n                setShowLoading(true);\n\n                let pass_enc = new TextEncoder();\n                let encoded = pass_enc.encode(passwordValue);\n                let hash256 = Buffer.from(sha256(encoded)).toString('hex').toUpperCase();\n\n                console.log(\"Para a API: /api/user/authenticate\");\n                console.log(\"> E-Mail: \" + emailValue);\n                console.log(\"> Password: \" + passwordValue);\n                console.log(\"> Password (sha256): \" + hash256);\n\n                //request\n                let response = authenticate(emailValue, passwordValue);\n\n                response.then(function(value) {\n                    \n                    //Success OK = 200    \n                    if (value.status === 200) {\n                        \n                        console.log(\"Resposta LOGIN OK\");\n             \n                        var json = value.json();\n                        \n                        json.then(function(value) {\n                            \n                            let user: User = formatUser(value);\n                            \n                            console.log(user);\n                            \n                            setLogged(true);\n\n                        });\n\n                    //Login error: 400    \n                    } else {\n\n                        console.log(value.status + \" Resposta LOGIN not OK\");\n\n                        alert(value);\n                    }\n                });\n            }\n        }>\n            Log-In\n        </IonButton>\n\n            <IonLoading\n                isOpen={showLoading}\n                onDidDismiss={() => setShowLoading(false)}\n                message={'Espere um momento...'}\n                duration={5000}\n            />\n        </div>\n\n        \n    );\n};\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}