{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/EvolucaoPage/Evolucao.tsx\";\nimport React from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardHeader, IonCardTitle, IonGrid, IonRow, IonCol, IonList, IonItem, IonSelect, IonSelectOption } from \"@ionic/react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../css/Evolucao.css\"; //----------------------------------------------------------------------\n\n//----------------------------------------------------------------------\nclass Evolucao extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.state = {\n      peso: new Array(),\n      cintura: new Array(),\n      //default option\n      menuOpt: \"compoCorporalOption\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      peso: [{\n        data: new Date(2020, 1, 1),\n        y: 269\n      }, {\n        data: new Date(2020, 2, 2),\n        y: 112\n      }, {\n        data: new Date(2020, 3, 3),\n        y: 82\n      }, {\n        data: new Date(2020, 4, 4),\n        y: 69\n      }, {\n        data: new Date(2020, 50, 5),\n        y: 12\n      }],\n      cintura: [{\n        data: new Date(2021, 6, 6),\n        y: 98\n      }, {\n        data: new Date(2021, 7, 7),\n        y: 95\n      }, {\n        data: new Date(2021, 8, 8),\n        y: 93\n      }, {\n        data: new Date(2021, 9, 9),\n        y: 88\n      }, {\n        data: new Date(2021, 10, 10),\n        y: 82\n      }]\n    });\n  }\n\n  render() {\n    //----------------------------------------------------------------------\n    const noLegend = {\n      legend: {\n        display: false\n      }\n    };\n    var generalGraphSettings = {\n      labels: [],\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: []\n      }]\n    }; //----------------------------------------------------------------------\n\n    var xPeso = [],\n        yPeso = [];\n    this.state.peso.forEach(ref => {\n      xPeso.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yPeso.push(ref.y);\n    });\n    var dataPeso = Object.assign({}, generalGraphSettings);\n    dataPeso.labels = xPeso;\n    dataPeso.datasets = Object.assign({}, generalGraphSettings.datasets);\n    dataPeso.datasets[0].data = yPeso;\n    console.log(dataPeso); //----------------------------------------------------------------------\n\n    var xCintura = [],\n        yCintura = [];\n    this.state.cintura.forEach(ref => {\n      xCintura.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yCintura.push(ref.y);\n    });\n    var dataCintura = Object.assign({}, generalGraphSettings);\n    dataCintura.labels = xCintura;\n    dataCintura.datasets = Object.assign({}, generalGraphSettings.datasets);\n    dataCintura.datasets[0].data = yCintura;\n    console.log(dataCintura); //----------------------------------------------------------------------\n\n    var menuOp = this.state.menuOpt;\n\n    if (this.state.menuOpt !== menuOp) {\n      this.setState({\n        menuOpt: menuOp\n      });\n    } //----------------------------------------------------------------------\n\n\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(IonHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(IonToolbar, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(IonTitle, {\n      id: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Evolu\\xE7\\xE3o\"))), React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      className: \"SelectionMenuItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(IonSelect, {\n      value: this.state.menuOpt,\n      placeholder: \"Select One\",\n      onIonChange: e => this.setState({\n        menuOpt: e.detail.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(IonSelectOption, {\n      value: \"compoCorporalOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SMlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Composi\\xE7\\xE3o corporal\")), React.createElement(IonSelectOption, {\n      value: \"perimCorporalOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SMlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Per\\xEDmetros corporais\"))))), React.createElement(IonContent, {\n      className: \"ionContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      class: \"ion-justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, (() => {\n      //Apresentar diferentes menus mediante a seleção\n      switch (this.state.menuOpt) {\n        //Caso a seleção de gráficos seja composição corporal\n        case \"compoCorporalOption\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, \"Peso\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataPeso,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }))));\n        //Caso a seleção de gráficos seja composição corporal\n\n        case \"perimCorporalOption\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, \"Cintura\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataCintura,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }))));\n\n        default:\n          return React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          });\n      } //close switch\n\n    } //close anonymouse function\n    )()))));\n  }\n\n}\n\nexport default Evolucao;","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/EvolucaoPage/Evolucao.tsx"],"names":["React","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","IonCard","IonCardHeader","IonCardTitle","IonGrid","IonRow","IonCol","IonList","IonItem","IonSelect","IonSelectOption","Line","Evolucao","Component","constructor","props","state","peso","Array","cintura","menuOpt","componentDidMount","setState","data","Date","y","render","noLegend","legend","display","generalGraphSettings","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","xPeso","yPeso","forEach","ref","push","getMonth","getDay","dataPeso","Object","assign","console","log","xCintura","yCintura","dataCintura","menuOp","e","detail","value"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardHeader, IonCardTitle,  IonGrid, IonRow, IonCol, IonList, IonItem, IonSelect, IonSelectOption } from \"@ionic/react\";\nimport{Line} from \"react-chartjs-2\";\n\nimport \"../css/Evolucao.css\";\n\n//----------------------------------------------------------------------\n\ninterface registoAvaliacao {\n    data: Date,\n    y: number\n}\n\n//----------------------------------------------------------------------\n\nclass Evolucao extends React.Component {\n\n    state: {\n\n        peso: Array<registoAvaliacao>\n\n        cintura: Array<registoAvaliacao>\n\n        menuOpt: String\n    }\n\n    constructor(props: any) {\n\n        super(props);   \n            \n        this.state = ({\n\n            peso: new Array<registoAvaliacao>(),\n\n            cintura: new Array<registoAvaliacao>(),\n            \n            //default option\n            menuOpt: \"compoCorporalOption\"\n\n        });\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            peso: [\n                {data: new Date(2020, 1, 1), y: 269},\n                {data: new Date(2020, 2, 2), y: 112},\n                {data: new Date(2020, 3, 3), y: 82},\n                {data: new Date(2020, 4, 4), y: 69},\n                {data: new Date(2020, 50, 5), y: 12}\n            ],\n            cintura: [\n                {data: new Date(2021, 6, 6), y: 98},\n                {data: new Date(2021, 7, 7), y: 95},\n                {data: new Date(2021, 8, 8), y: 93},\n                {data: new Date(2021, 9, 9), y: 88},\n                {data: new Date(2021, 10, 10), y: 82}\n            ]\n        });\n    }\n\n    render() {\n        \n        //----------------------------------------------------------------------\n\n        const noLegend={ legend: { display: false } }; \n\n        var generalGraphSettings = { \n            labels: [],\n            datasets: [{ \n                fill: false, lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)', borderColor: 'rgba(75,192,192,1)',\n                borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)', pointBackgroundColor: '#fff',\n                pointBorderWidth: 1, pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)', pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2, pointRadius: 1, pointHitRadius: 10, \n                data: [] \n            }]\n        };\n        \n        //----------------------------------------------------------------------\n\n        var xPeso: any[] = [], yPeso: number[] = [];\n        this.state.peso.forEach((ref)=>{\n            xPeso.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());\n            yPeso.push(ref.y);\n        });\n        var dataPeso: any = Object.assign({}, generalGraphSettings);\n        dataPeso.labels = xPeso;\n        dataPeso.datasets = Object.assign({}, generalGraphSettings.datasets);\n        dataPeso.datasets[0].data = yPeso;\n\n        console.log(dataPeso);\n\n        //----------------------------------------------------------------------\n\n        var xCintura : any[] = [], yCintura: number[] = [];\n        this.state.cintura.forEach((ref)=>{\n            xCintura.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());\n            yCintura.push(ref.y);\n        });\n        var dataCintura: any = Object.assign({}, generalGraphSettings);\n        dataCintura.labels = xCintura;\n        dataCintura.datasets = Object.assign({}, generalGraphSettings.datasets);\n        dataCintura.datasets[0].data = yCintura;\n\n        console.log(dataCintura);\n\n        //----------------------------------------------------------------------\n\n        var menuOp = this.state.menuOpt;\n        \n        if(this.state.menuOpt !== menuOp) {\n\n            this.setState( { menuOpt: menuOp } )\n        } \n\n        //----------------------------------------------------------------------\n\n        return(\n\n            <IonPage>\n            \n                {/* Page title */}\n\n                <IonHeader>\n                    <IonToolbar color=\"primary\">\n                        <IonTitle id=\"page-title\">Evolução</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n            \n                {/* Menu superior para escolha de grupo de gráficos */}\n            \n                <IonList>\n                    \n                    {/*\n                    <IonListHeader>\n                        <IonLabel></IonLabel>\n                    </IonListHeader>\n                    */}\n\n                    <IonItem className=\"SelectionMenuItem\">\n    \n                            <IonSelect value={this.state.menuOpt} placeholder=\"Select One\" onIonChange={\n                                e =>this.setState( {menuOpt:e.detail.value})\n                            }>\n\n                                <IonSelectOption value=\"compoCorporalOption\"><div className=\"SMlabel\">Composição corporal</div></IonSelectOption>\n                                <IonSelectOption value=\"perimCorporalOption\"><div className=\"SMlabel\">Perímetros corporais</div></IonSelectOption>\n\n                            </IonSelect>\n                    </IonItem>\n\n                </IonList>\n\n                {/* Gráficos disponiveis */}\n\n                <IonContent className=\"ionContent\">\n                \n                <IonGrid className=\"grid\">\n\n                    <IonRow class=\"ion-justify-content-center\">\n                    \n                        {( () => {\n                            \n                            //Apresentar diferentes menus mediante a seleção\n                            switch(this.state.menuOpt) {\n                                \n                                //Caso a seleção de gráficos seja composição corporal\n                                case \"compoCorporalOption\": \n                                \n                                    return(\n\n                                        <React.Fragment>\n                                            \n                                            {/* Gráfico de Evolução do Peso */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Peso</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                                <div className=\"evoStats\">\n                                                    <Line ref=\"lineChart\" data={dataPeso} options={noLegend} />\n                                                </div>\n\n                                            </IonCol>\n\n                                        </React.Fragment>\n                                    );\n\n                                //Caso a seleção de gráficos seja composição corporal\n                                case \"perimCorporalOption\": \n                                \n                                    return(\n\n                                        <React.Fragment>\n                                            \n                                            {/* Gráfico de Evolução do Peso */}\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Cintura</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                                <div className=\"evoStats\">\n                                                    <Line ref=\"lineChart\" data={dataCintura} options={noLegend} />\n                                                </div>\n\n                                            </IonCol>\n\n                                        </React.Fragment>\n                                    );\n\n                                    default:\n                                        \n                                        return( \n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                                            {/* Empty option */}\n                                            </IonCol>\n                                        );\n\n                            } //close switch\n\n                        } //close anonymouse function\n                    ) ()}\n\n                    </IonRow>\n\n                </IonGrid>\n\n            </IonContent>\n\n\n        </IonPage>\n        );\n    }\n\n}\n\nexport default Evolucao;"]},"metadata":{},"sourceType":"module"}