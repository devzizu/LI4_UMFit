{"ast":null,"code":"import _classCallCheck from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";export{};export var User=function User(usertype,email,nif,nome,genero,data_nascimento,localidade,categoria){_classCallCheck(this,User);this.tipoDeUser=void 0;this.email=void 0;this.nif=void 0;this.nome=void 0;this.genero=void 0;this.data_nascimento=void 0;this.localidade=void 0;this.categoria=void 0;this.tipoDeUser=usertype;this.email=email;this.nif=nif;this.nome=nome;this.genero=genero;this.data_nascimento=data_nascimento;this.localidade=localidade;this.categoria=categoria;};//Format the result from fetch Promise<any>\nexport function formatUser(user){return{tipoDeUser:user.tipoDeUser,email:user.email,nif:user.nif,nome:user.nome,genero:user.genero,data_nascimento:user.data_nascimento,localidade:user.localidade,categoria:user.categoria};}export function getTestValueUser(){return{tipoDeUser:\"Cliente\",email:\"joseph.99.matt@umfit.com\",nif:123456789,nome:\"Joseph Matt\",genero:0,data_nascimento:\"22/02/1992\",localidade:\"Rua das flores, nº 554.\",categoria:\"Premium\"};}","map":{"version":3,"sources":["/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/models/Other/User.ts"],"names":["User","usertype","email","nif","nome","genero","data_nascimento","localidade","categoria","tipoDeUser","formatUser","user","getTestValueUser"],"mappings":"mJACA,SAEA,UAAaA,CAAAA,IAAb,CAWI,cAAYC,QAAZ,CACYC,KADZ,CAEYC,GAFZ,CAGYC,IAHZ,CAIYC,MAJZ,CAKYC,eALZ,CAMYC,UANZ,CAOYC,SAPZ,CAO+B,iCAhB/BC,UAgB+B,aAf/BP,KAe+B,aAd/BC,GAc+B,aAb/BC,IAa+B,aAZ/BC,MAY+B,aAX/BC,eAW+B,aAV/BC,UAU+B,aAT/BC,SAS+B,QAE3B,KAAKC,UAAL,CAAkBR,QAAlB,CACA,KAAKC,KAAL,CAAaA,KAAb,CACA,KAAKC,GAAL,CAAWA,GAAX,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACA,KAAKC,MAAL,CAAcA,MAAd,CACA,KAAKC,eAAL,CAAuBA,eAAvB,CACA,KAAKC,UAAL,CAAkBA,UAAlB,CACA,KAAKC,SAAL,CAAiBA,SAAjB,CACH,CA5BL,CA+BA;AACA,MAAO,SAASE,CAAAA,UAAT,CAAoBC,IAApB,CAAqC,CAExC,MAAO,CACHF,UAAU,CAAEE,IAAI,CAACF,UADd,CAEHP,KAAK,CAAES,IAAI,CAACT,KAFT,CAGHC,GAAG,CAAEQ,IAAI,CAACR,GAHP,CAIHC,IAAI,CAAEO,IAAI,CAACP,IAJR,CAKHC,MAAM,CAAEM,IAAI,CAACN,MALV,CAMHC,eAAe,CAAEK,IAAI,CAACL,eANnB,CAOHC,UAAU,CAAEI,IAAI,CAACJ,UAPd,CAQHC,SAAS,CAAEG,IAAI,CAACH,SARb,CAAP,CAUH,CAED,MAAO,SAASI,CAAAA,gBAAT,EAAkC,CAErC,MAAO,CACHH,UAAU,CAAE,SADT,CAEHP,KAAK,CAAE,0BAFJ,CAGHC,GAAG,CAAE,SAHF,CAIHC,IAAI,CAAE,aAJH,CAKHC,MAAM,CAAE,CALL,CAMHC,eAAe,CAAE,YANd,CAOHC,UAAU,CAAE,yBAPT,CAQHC,SAAS,CAAE,SARR,CAAP,CAUH","sourcesContent":["\nexport {}\n\nexport class User {\n\n    tipoDeUser: string;\n    email: string;\n    nif: number;\n    nome: string;\n    genero: number;\n    data_nascimento: string;\n    localidade: string;\n    categoria: string;\n\n    constructor(usertype: string,\n                email: string, \n                nif: number, \n                nome: string,\n                genero: number,\n                data_nascimento: string,\n                localidade: string,\n                categoria: string) {\n        \n        this.tipoDeUser = usertype;\n        this.email = email;\n        this.nif = nif;\n        this.nome = nome;\n        this.genero = genero;\n        this.data_nascimento = data_nascimento;\n        this.localidade = localidade;\n        this.categoria = categoria;\n    }\n  }\n\n//Format the result from fetch Promise<any>\nexport function formatUser(user: any): User {\n    \n    return { \n        tipoDeUser: user.tipoDeUser,\n        email: user.email,\n        nif: user.nif,\n        nome: user.nome,\n        genero: user.genero,\n        data_nascimento: user.data_nascimento,\n        localidade: user.localidade,\n        categoria: user.categoria\n    };\n}\n\nexport function getTestValueUser(): User {\n\n    return {\n        tipoDeUser: \"Cliente\",\n        email: \"joseph.99.matt@umfit.com\",\n        nif: 123456789,\n        nome: \"Joseph Matt\",\n        genero: 0,\n        data_nascimento: \"22/02/1992\",\n        localidade: \"Rua das flores, nº 554.\",\n        categoria: \"Premium\" \n    }\n}"]},"metadata":{},"sourceType":"module"}