{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/components/LogIn.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport sha256 from \"fast-sha256\";\nimport axios from 'axios';\nimport './css/LogIn.css';\nimport { IonInput, IonText, IonButton, IonLoading } from '@ionic/react';\nvar baseURL = \"https://192.168.1.67:5001/api/user\";\n\nconst getUserCredentials = () => {\n  return axios.post(baseURL + \"/authenticate\", {\n    email: \"a89983@alunos.uminho.pt\",\n    password: \"secretpass2\"\n  }).then(raw_res => raw_res.data).then(data => console.log(data)).catch(error => console.log(error));\n};\n\nconst LogIn = () => {\n  const [showLoading, setShowLoading] = useState(false);\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [data, setData] = useState({\n    email: \"not_fetched\",\n    password: \"not_fetched\"\n  });\n  setTimeout(() => {\n    setShowLoading(false);\n  }, 2000);\n  useEffect(() => {\n    const res = getUserCredentials();\n  }, []);\n  return React.createElement(\"div\", {\n    id: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"phrase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(IonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"O teu gin\\xE1sio da UMinho...\")), React.createElement(\"div\", {\n    id: \"input-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(IonInput, {\n    required: true,\n    type: \"email\",\n    id: \"email-input\",\n    placeholder: \"E-Mail\",\n    value: emailValue,\n    onIonChange: e => {\n      setEmailValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(IonInput, {\n    required: true,\n    type: \"password\",\n    id: \"pass-input\",\n    placeholder: \"Password\",\n    value: passwordValue,\n    onIonChange: e => {\n      setPasswordValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(IonButton, {\n    expand: \"block\",\n    type: \"submit\",\n    id: \"login-button\",\n    onClick: () => {\n      setShowLoading(true);\n      let pass_enc = new TextEncoder();\n      let encoded = pass_enc.encode(passwordValue);\n      let hash256 = Buffer.from(sha256(encoded)).toString('hex').toUpperCase();\n      console.log(\"E-Mail: \" + emailValue);\n      console.log(\"Password (sha256): \" + hash256);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Log-In\"), React.createElement(IonLoading, {\n    isOpen: showLoading,\n    onDidDismiss: () => setShowLoading(false),\n    message: 'Espere um momento...',\n    duration: 5000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nexport default LogIn;","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/components/LogIn.tsx"],"names":["React","useState","useEffect","sha256","axios","IonInput","IonText","IonButton","IonLoading","baseURL","getUserCredentials","post","email","password","then","raw_res","data","console","log","catch","error","LogIn","showLoading","setShowLoading","emailValue","setEmailValue","passwordValue","setPasswordValue","setData","setTimeout","res","e","target","value","pass_enc","TextEncoder","encoded","encode","hash256","Buffer","from","toString","toUpperCase"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nimport sha256 from \"fast-sha256\";\nimport axios from 'axios';\n\nimport './css/LogIn.css';\nimport { IonInput, IonText, IonButton, IonLoading } from '@ionic/react';\n\nvar baseURL: string = \"https://192.168.1.67:5001/api/user\";\n\nconst getUserCredentials = () => {\n\n    return axios.post(baseURL + \"/authenticate\", {\n        email: \"a89983@alunos.uminho.pt\",\n        password: \"secretpass2\"\n    }).then(raw_res => raw_res.data)\n      .then(data => console.log(data))\n      .catch(error => console.log(error));\n}\n\nconst LogIn: React.FC = () => {\n\n    const [showLoading, setShowLoading] = useState(false);\n    const [emailValue, setEmailValue] = useState<string>(\"\");\n    const [passwordValue, setPasswordValue] = useState<string>(\"\");\n\n    const [data, setData] = useState({\n        email: \"not_fetched\",\n        password: \"not_fetched\"\n    });\n\n    setTimeout(() => {\n        setShowLoading(false);\n    }, 2000);\n\n    useEffect(() => {\n        const res = getUserCredentials();\n    }, []);\n\n    return (\n        <div id=\"login-form\">\n            <div id=\"Logo\"></div>\n            <div id=\"phrase\">\n                <IonText>O teu gin√°sio da UMinho...</IonText>\n            </div>\n        <div id=\"input-form\">\n            <br></br>\n            <IonInput required type=\"email\" id=\"email-input\" placeholder=\"E-Mail\"\n            value={emailValue}\n            onIonChange={(e) => {\n                setEmailValue((e.target as HTMLInputElement).value);\n            }}>\n            </IonInput>\n            <br></br>\n            <IonInput required type=\"password\" id=\"pass-input\" placeholder=\"Password\"\n            value={passwordValue}\n            onIonChange={(e) => {\n                setPasswordValue((e.target as HTMLInputElement).value);\n            }}>\n            </IonInput>\n        </div>\n        <IonButton expand=\"block\" type=\"submit\" id=\"login-button\" onClick={() => {\n                \n                setShowLoading(true);\n\n                let pass_enc = new TextEncoder();\n                let encoded = pass_enc.encode(passwordValue);\n                let hash256 = Buffer.from(sha256(encoded)).toString('hex').toUpperCase();\n\n                console.log(\"E-Mail: \" + emailValue);\n                console.log(\"Password (sha256): \" + hash256);\n            }\n        }>\n            Log-In\n        </IonButton>\n            <IonLoading\n                isOpen={showLoading}\n                onDidDismiss={() => setShowLoading(false)}\n                message={'Espere um momento...'}\n                duration={5000}\n            />\n        </div>\n    );\n};\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}