{"ast":null,"code":"import _regeneratorRuntime from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/inherits\";import{IonCard,IonCardHeader,IonCardSubtitle,IonCardTitle,IonCol,IonContent,IonGrid,IonHeader,IonItem,IonList,IonPage,IonRow,IonSelect,IonSelectOption,IonTitle,IonToolbar}from\"@ionic/react\";import React from\"react\";import{Line}from\"react-chartjs-2\";import{getEvolucao}from\"../../../models/API/EvolucaoAPI\";//import{Line, Pie} from \"react-chartjs-2\";\nimport\"../css/Evolucao.css\";//----------------------------------------------------------------------\n//Graph settings\nvar generalGraphSettings={labels:[],datasets:[{fill:false,lineTension:0.1,backgroundColor:'rgba(75,192,192,0.4)',borderColor:'rgba(75,192,192,1)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(75,192,192,1)',pointBackgroundColor:'#fff',pointBorderWidth:5,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(75,192,192,1)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:3,pointHitRadius:10,data:[]}]};/*\n\nvar pieGraphSettings = {\n\tlabels: [ 'Massa Magra (kg)', 'Massa Gorda (kg)'],\n\tdatasets: [{ data: [], backgroundColor: ['#36A2EB', '#FF6384'],\n\t\thoverBackgroundColor: [ '#36A2EB', '#FF6384' ] }]\n};\n\n*/ //----------------------------------------------------------------------\nvar customActionSheetOptions={header:'Gráfico de Evolução'};//----------------------------------------------------------------------\nvar Evolucao=/*#__PURE__*/function(_React$Component){_inherits(Evolucao,_React$Component);function Evolucao(props){var _this;_classCallCheck(this,Evolucao);_this=_possibleConstructorReturn(this,_getPrototypeOf(Evolucao).call(this,props));_this.state=void 0;_this.state={peso:new Array(),massaGorda:new Array(),massaMagra:new Array(),cintura:new Array(),//default option\nmenuOpt:\"compoCorporalOption\"};return _this;}_createClass(Evolucao,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var ret;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getEvolucao();case 2:ret=_context.sent;if(!(ret.status!==200)){_context.next=5;break;}return _context.abrupt(\"return\");case 5:ret.json().then(function(jsonData){_this2.setState({peso:jsonData.pesos.map(function(elem){var dt=new Date(elem.data);return Object.assign({},{data:dt,y:elem.registo});}),cintura:jsonData.cinturas.map(function(elem){var dt=new Date(elem.data);return Object.assign({},{data:dt,y:elem.registo});})});});case 6:case\"end\":return _context.stop();}}},_callee);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this3=this;//----------------------------------------------------------------------\nvar noLegend={legend:{display:false}};//----------------------------------------------------------------------\nvar xPeso=[],yPeso=[];this.state.peso.forEach(function(ref){xPeso.push(\"\"+ref.data.getDate()+\"/\"+(ref.data.getMonth()+1));yPeso.push(ref.y);});var dataPeso=JSON.parse(JSON.stringify(generalGraphSettings));dataPeso.labels=xPeso;dataPeso.datasets[0].data=yPeso;//----------------------------------------------------------------------\n/*\n\n        var dataMG_MM_PIE: any = JSON.parse(JSON.stringify(pieGraphSettings));\n        dataMG_MM_PIE.datasets[0].data = [this.state.massaMagra.pop()?.y,\n                                          this.state.massaGorda.pop()?.y];\n\n*/ //----------------------------------------------------------------------\nvar xCintura=[],yCintura=[];this.state.cintura.forEach(function(ref){xCintura.push(\"\"+ref.data.getDate()+\"/\"+(ref.data.getMonth()+1));yCintura.push(ref.y);});var dataCintura=JSON.parse(JSON.stringify(generalGraphSettings));dataCintura.labels=xCintura;dataCintura.datasets[0].data=yCintura;//----------------------------------------------------------------------\nvar menuOp=this.state.menuOpt;if(this.state.menuOpt!==menuOp){this.setState({menuOpt:menuOp});}//----------------------------------------------------------------------\nreturn React.createElement(IonPage,null,React.createElement(IonHeader,null,React.createElement(IonToolbar,{color:\"primary\"},React.createElement(IonTitle,{id:\"page-title\"},\"Evolu\\xE7\\xE3o\"))),React.createElement(IonList,null,React.createElement(IonItem,null,React.createElement(IonSelect,{className:\"SelectionMenuItem\",interfaceOptions:customActionSheetOptions,value:this.state.menuOpt,placeholder:\"Select One\",onIonChange:function onIonChange(e){return _this3.setState({menuOpt:e.detail.value});}},React.createElement(IonSelectOption,{value:\"compoCorporalOption\"},\"Composi\\xE7\\xE3o corporal\"),React.createElement(IonSelectOption,{value:\"perimCorporalOption\"},\"Per\\xEDmetros corporais\")))),React.createElement(IonContent,{className:\"ionContent\"},React.createElement(IonGrid,{className:\"grid\"},React.createElement(IonRow,{class:\"ion-justify-content-center\"},function(){//Apresentar diferentes menus mediante a seleção\nswitch(_this3.state.menuOpt){//Caso a seleção de gráficos seja composição corporal\ncase\"compoCorporalOption\":return React.createElement(React.Fragment,null,React.createElement(IonCol,{sizeXs:\"12\",\"size-Sm\":\"12\",sizeMd:\"6\",sizeLg:\"6\"},React.createElement(IonCard,{className:\"titleCard\"},React.createElement(IonCardHeader,null,React.createElement(IonCardTitle,null,React.createElement(\"div\",{className:\"textWrapper\"},\"Peso\")),React.createElement(IonCardSubtitle,null,React.createElement(\"div\",{className:\"textWrapper\"},\"(em Kg)\")))),React.createElement(\"div\",{className:\"evoStats\"},React.createElement(Line,{ref:\"lineChart\",data:dataPeso,options:noLegend}))),React.createElement(IonCol,{sizeXs:\"12\",\"size-Sm\":\"12\",sizeMd:\"6\",sizeLg:\"6\"},React.createElement(IonCard,{className:\"titleCard\"},React.createElement(IonCardHeader,null,React.createElement(IonCardTitle,null,React.createElement(\"div\",{className:\"textWrapper\"},\"IMC\")),React.createElement(IonCardSubtitle,null,React.createElement(\"div\",{className:\"textWrapper\"},\"(\\xCDndice)\")))),React.createElement(\"div\",{className:\"evoStats\"},React.createElement(Line,{ref:\"lineChart\",data:dataPeso,options:noLegend}))));//Caso a seleção de gráficos seja composição corporal\ncase\"perimCorporalOption\":return React.createElement(React.Fragment,null,React.createElement(IonCol,{sizeXs:\"12\",\"size-Sm\":\"12\",sizeMd:\"6\",sizeLg:\"6\"},React.createElement(IonCard,{className:\"titleCard\"},React.createElement(IonCardHeader,null,React.createElement(IonCardTitle,null,React.createElement(\"div\",{className:\"textWrapper\"},\"Cintura\")))),React.createElement(\"div\",{className:\"evoStats\"},React.createElement(Line,{ref:\"lineChart\",data:dataCintura,options:noLegend}))));default:return React.createElement(IonCol,{sizeXs:\"12\",\"size-Sm\":\"12\",sizeMd:\"6\",sizeLg:\"6\"});}//close switch\n}//close anonymouse function\n()))));}}]);return Evolucao;}(React.Component);export default Evolucao;","map":{"version":3,"sources":["/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/EvolucaoPage/Evolucao.tsx"],"names":["IonCard","IonCardHeader","IonCardSubtitle","IonCardTitle","IonCol","IonContent","IonGrid","IonHeader","IonItem","IonList","IonPage","IonRow","IonSelect","IonSelectOption","IonTitle","IonToolbar","React","Line","getEvolucao","generalGraphSettings","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","customActionSheetOptions","header","Evolucao","props","state","peso","Array","massaGorda","massaMagra","cintura","menuOpt","ret","status","json","then","jsonData","setState","pesos","map","elem","dt","Date","Object","assign","y","registo","cinturas","noLegend","legend","display","xPeso","yPeso","forEach","ref","push","getDate","getMonth","dataPeso","JSON","parse","stringify","xCintura","yCintura","dataCintura","menuOp","e","detail","value","Component"],"mappings":"kgCACA,OAASA,OAAT,CAAkBC,aAAlB,CAAiCC,eAAjC,CAAkDC,YAAlD,CAAgEC,MAAhE,CAAwEC,UAAxE,CAAoFC,OAApF,CAA6FC,SAA7F,CAAwGC,OAAxG,CAAiHC,OAAjH,CAA0HC,OAA1H,CAAmIC,MAAnI,CAA2IC,SAA3I,CAAsJC,eAAtJ,CAAuKC,QAAvK,CAAiLC,UAAjL,KAAmM,cAAnM,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,WAAT,KAA4B,iCAA5B,CACA;AACA,MAAO,qBAAP,CAEA;AACA;AAEA,GAAIC,CAAAA,oBAAoB,CAAG,CACvBC,MAAM,CAAE,EADe,CAEvBC,QAAQ,CAAE,CAAC,CACPC,IAAI,CAAE,KADC,CACMC,WAAW,CAAE,GADnB,CAEPC,eAAe,CAAE,sBAFV,CAEkCC,WAAW,CAAE,oBAF/C,CAGPC,cAAc,CAAE,MAHT,CAGiBC,UAAU,CAAE,EAH7B,CAGiCC,gBAAgB,CAAE,GAHnD,CAGwDC,eAAe,CAAE,OAHzE,CAIPC,gBAAgB,CAAE,oBAJX,CAIiCC,oBAAoB,CAAE,MAJvD,CAKPC,gBAAgB,CAAE,CALX,CAKcC,gBAAgB,CAAE,CALhC,CAMPC,yBAAyB,CAAE,oBANpB,CAM0CC,qBAAqB,CAAE,qBANjE,CAOPC,qBAAqB,CAAE,CAPhB,CAOmBC,WAAW,CAAE,CAPhC,CAOmCC,cAAc,CAAE,EAPnD,CAQPC,IAAI,CAAE,EARC,CAAD,CAFa,CAA3B,CAcA;;;;;;;;GAUA;AAMA,GAAMC,CAAAA,wBAAwB,CAAG,CAC7BC,MAAM,CAAE,qBADqB,CAAjC,CAGA;GAEMC,CAAAA,Q,8EAaF,kBAAYC,KAAZ,CAAwB,0CAEpB,0EAAMA,KAAN,GAFoB,MAXxBC,KAWwB,QAIpB,MAAKA,KAAL,CAAc,CAEVC,IAAI,CAAE,GAAIC,CAAAA,KAAJ,EAFI,CAGVC,UAAU,CAAE,GAAID,CAAAA,KAAJ,EAHF,CAIVE,UAAU,CAAE,GAAIF,CAAAA,KAAJ,EAJF,CAMVG,OAAO,CAAE,GAAIH,CAAAA,KAAJ,EANC,CAQV;AACAI,OAAO,CAAE,qBATC,CAAd,CAJoB,aAevB,C,iUAGoBhC,CAAAA,WAAW,E,QAAxBiC,G,oBACHA,GAAG,CAACC,MAAJ,GAAe,G,kEAChBD,GAAG,CAACE,IAAJ,GAAWC,IAAX,CACI,SAACC,QAAD,CAAqB,CAGjB,MAAI,CAACC,QAAL,CAAc,CAEVX,IAAI,CAAEU,QAAQ,CAACE,KAAT,CAAeC,GAAf,CAAmB,SAACC,IAAD,CAAe,CAEpC,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,IAAJ,CAAUF,IAAI,CAACpB,IAAf,CAAT,CACA,MAAOuB,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkB,CAACxB,IAAI,CAAEqB,EAAP,CAAWI,CAAC,CAAEL,IAAI,CAACM,OAAnB,CAAlB,CAAP,CACH,CAJK,CAFI,CAQVhB,OAAO,CAAEM,QAAQ,CAACW,QAAT,CAAkBR,GAAlB,CAAsB,SAACC,IAAD,CAAe,CAC1C,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,IAAJ,CAAUF,IAAI,CAACpB,IAAf,CAAT,CACA,MAAOuB,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkB,CAACxB,IAAI,CAAEqB,EAAP,CAAWI,CAAC,CAAEL,IAAI,CAACM,OAAnB,CAAlB,CAAP,CACP,CAHY,CARC,CAAd,EAeH,CAnBL,E,0MAuBK,iBAGL;AAEA,GAAME,CAAAA,QAAQ,CAAC,CAAEC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAV,CAAf,CAEA;AAEA,GAAIC,CAAAA,KAAY,CAAG,EAAnB,CAAuBC,KAAe,CAAG,EAAzC,CACA,KAAK3B,KAAL,CAAWC,IAAX,CAAgB2B,OAAhB,CAAwB,SAACC,GAAD,CAAO,CAC3BH,KAAK,CAACI,IAAN,CAAW,GAAGD,GAAG,CAAClC,IAAJ,CAASoC,OAAT,EAAH,CAAsB,GAAtB,EAA2BF,GAAG,CAAClC,IAAJ,CAASqC,QAAT,GAAoB,CAA/C,CAAX,EACAL,KAAK,CAACG,IAAN,CAAWD,GAAG,CAACT,CAAf,EACH,CAHD,EAIA,GAAIa,CAAAA,QAAa,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe7D,oBAAf,CAAX,CAApB,CACA0D,QAAQ,CAACzD,MAAT,CAAkBkD,KAAlB,CACAO,QAAQ,CAACxD,QAAT,CAAkB,CAAlB,EAAqBkB,IAArB,CAA4BgC,KAA5B,CAEA;AAER;;;;;;EApBa,CA4BL;AAEA,GAAIU,CAAAA,QAAgB,CAAG,EAAvB,CAA2BC,QAAkB,CAAG,EAAhD,CACA,KAAKtC,KAAL,CAAWK,OAAX,CAAmBuB,OAAnB,CAA2B,SAACC,GAAD,CAAS,CAChCQ,QAAQ,CAACP,IAAT,CAAc,GAAGD,GAAG,CAAClC,IAAJ,CAASoC,OAAT,EAAH,CAAsB,GAAtB,EAA2BF,GAAG,CAAClC,IAAJ,CAASqC,QAAT,GAAoB,CAA/C,CAAd,EACAM,QAAQ,CAACR,IAAT,CAAcD,GAAG,CAACT,CAAlB,EACH,CAHD,EAIA,GAAImB,CAAAA,WAAgB,CAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe7D,oBAAf,CAAX,CAAvB,CACAgE,WAAW,CAAC/D,MAAZ,CAAqB6D,QAArB,CACAE,WAAW,CAAC9D,QAAZ,CAAqB,CAArB,EAAwBkB,IAAxB,CAA+B2C,QAA/B,CAEA;AAEA,GAAIE,CAAAA,MAAM,CAAG,KAAKxC,KAAL,CAAWM,OAAxB,CAEA,GAAG,KAAKN,KAAL,CAAWM,OAAX,GAAuBkC,MAA1B,CAAkC,CAE9B,KAAK5B,QAAL,CAAe,CAAEN,OAAO,CAAEkC,MAAX,CAAf,EACH,CAED;AAEA,MAEI,qBAAC,OAAD,MAII,oBAAC,SAAD,MACI,oBAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,EACI,oBAAC,QAAD,EAAU,EAAE,CAAC,YAAb,mBADJ,CADJ,CAJJ,CAYI,oBAAC,OAAD,MAQI,oBAAC,OAAD,MAEQ,oBAAC,SAAD,EAAW,SAAS,CAAC,mBAArB,CAAyC,gBAAgB,CAAE5C,wBAA3D,CAAqF,KAAK,CAAE,KAAKI,KAAL,CAAWM,OAAvG,CAAgH,WAAW,CAAC,YAA5H,CAAyI,WAAW,CAChJ,qBAAAmC,CAAC,QAAG,CAAA,MAAI,CAAC7B,QAAL,CAAe,CAACN,OAAO,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAlB,CAAf,CAAH,EADL,EAII,oBAAC,eAAD,EAAiB,KAAK,CAAC,qBAAvB,8BAJJ,CAKI,oBAAC,eAAD,EAAiB,KAAK,CAAC,qBAAvB,4BALJ,CAFR,CARJ,CAZJ,CAoCI,oBAAC,UAAD,EAAY,SAAS,CAAC,YAAtB,EAEA,oBAAC,OAAD,EAAS,SAAS,CAAC,MAAnB,EAEI,oBAAC,MAAD,EAAQ,KAAK,CAAC,4BAAd,EAEO,UAAM,CAEL;AACA,OAAO,MAAI,CAAC3C,KAAL,CAAWM,OAAlB,EAEI;AACA,IAAK,qBAAL,CAEI,MAEI,qBAAC,KAAD,CAAO,QAAP,MAII,oBAAC,MAAD,EAAQ,MAAM,CAAC,IAAf,CAAoB,UAAS,IAA7B,CAAkC,MAAM,CAAC,GAAzC,CAA6C,MAAM,CAAC,GAApD,EAEI,oBAAC,OAAD,EAAS,SAAS,CAAC,WAAnB,EAEI,oBAAC,aAAD,MACI,oBAAC,YAAD,MAAc,2BAAK,SAAS,CAAC,aAAf,SAAd,CADJ,CAEI,oBAAC,eAAD,MAAiB,2BAAK,SAAS,CAAC,aAAf,YAAjB,CAFJ,CAFJ,CAFJ,CAWI,2BAAK,SAAS,CAAC,UAAf,EACI,oBAAC,IAAD,EAAM,GAAG,CAAC,WAAV,CAAsB,IAAI,CAAE2B,QAA5B,CAAsC,OAAO,CAAEV,QAA/C,EADJ,CAXJ,CAJJ,CAqBI,oBAAC,MAAD,EAAQ,MAAM,CAAC,IAAf,CAAoB,UAAS,IAA7B,CAAkC,MAAM,CAAC,GAAzC,CAA6C,MAAM,CAAC,GAApD,EAEI,oBAAC,OAAD,EAAS,SAAS,CAAC,WAAnB,EAEI,oBAAC,aAAD,MACI,oBAAC,YAAD,MAAc,2BAAK,SAAS,CAAC,aAAf,QAAd,CADJ,CAEI,oBAAC,eAAD,MAAiB,2BAAK,SAAS,CAAC,aAAf,gBAAjB,CAFJ,CAFJ,CAFJ,CAWI,2BAAK,SAAS,CAAC,UAAf,EACI,oBAAC,IAAD,EAAM,GAAG,CAAC,WAAV,CAAsB,IAAI,CAAEU,QAA5B,CAAsC,OAAO,CAAEV,QAA/C,EADJ,CAXJ,CArBJ,CAFJ,CA2CJ;AACA,IAAK,qBAAL,CAEI,MAEI,qBAAC,KAAD,CAAO,QAAP,MAGI,oBAAC,MAAD,EAAQ,MAAM,CAAC,IAAf,CAAoB,UAAS,IAA7B,CAAkC,MAAM,CAAC,GAAzC,CAA6C,MAAM,CAAC,GAApD,EAEI,oBAAC,OAAD,EAAS,SAAS,CAAC,WAAnB,EAEI,oBAAC,aAAD,MACI,oBAAC,YAAD,MAAc,2BAAK,SAAS,CAAC,aAAf,YAAd,CADJ,CAFJ,CAFJ,CAUI,2BAAK,SAAS,CAAC,UAAf,EACI,oBAAC,IAAD,EAAM,GAAG,CAAC,WAAV,CAAsB,IAAI,CAAEgB,WAA5B,CAAyC,OAAO,CAAEhB,QAAlD,EADJ,CAVJ,CAHJ,CAFJ,CAwBA,QAEI,MACI,qBAAC,MAAD,EAAQ,MAAM,CAAC,IAAf,CAAoB,UAAS,IAA7B,CAAkC,MAAM,CAAC,GAAzC,CAA6C,MAAM,CAAC,GAApD,EADJ,CA7EZ,CAmFE;AAEL,CAAC;AAxFD,EAFL,CAFJ,CAFA,CApCJ,CAFJ,CAgJH,C,sBA1PkBnD,KAAK,CAACwE,S,EA8P7B,cAAe9C,CAAAA,QAAf","sourcesContent":["\nimport { IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCol, IonContent, IonGrid, IonHeader, IonItem, IonList, IonPage, IonRow, IonSelect, IonSelectOption, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { getEvolucao } from \"../../../models/API/EvolucaoAPI\";\n//import{Line, Pie} from \"react-chartjs-2\";\nimport \"../css/Evolucao.css\";\n\n//----------------------------------------------------------------------\n//Graph settings\n\nvar generalGraphSettings = { \n    labels: [],\n    datasets: [{ \n        fill: false, lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)', borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)', pointBackgroundColor: '#fff',\n        pointBorderWidth: 5, pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)', pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2, pointRadius: 3, pointHitRadius: 10, \n        data: []\n    }]\n};\n\n/*\n\nvar pieGraphSettings = {\n\tlabels: [ 'Massa Magra (kg)', 'Massa Gorda (kg)'],\n\tdatasets: [{ data: [], backgroundColor: ['#36A2EB', '#FF6384'],\n\t\thoverBackgroundColor: [ '#36A2EB', '#FF6384' ] }]\n};\n\n*/\n\n//----------------------------------------------------------------------\n\ninterface registoAvaliacao {\n    data: Date,\n    y: number\n}\nconst customActionSheetOptions = {\n    header: 'Gráfico de Evolução'\n};\n//----------------------------------------------------------------------\n\nclass Evolucao extends React.Component<any> {\n\n    state: {\n\n        peso: Array<registoAvaliacao>\n        massaGorda: Array<registoAvaliacao>\n        massaMagra: Array<registoAvaliacao>\n\n        cintura: Array<registoAvaliacao>\n\n        menuOpt: String\n    }\n\n    constructor(props: any) {\n\n        super(props);   \n            \n        this.state = ({\n\n            peso: new Array<registoAvaliacao>(),\n            massaGorda: new Array<registoAvaliacao>(),\n            massaMagra: new Array<registoAvaliacao>(),\n\n            cintura: new Array<registoAvaliacao>(),\n            \n            //default option\n            menuOpt: \"compoCorporalOption\"\n        });\n    }\n\n    async componentDidMount() {\n      const ret =  await getEvolucao();\n      if(ret.status !== 200) return;\n        ret.json().then(\n            (jsonData : any)  => {\n          \n                \n                this.setState({\n\n                    peso: jsonData.pesos.map((elem: any) => {\n                        \n                        var dt = new Date (elem.data);\n                        return Object.assign({}, {data: dt, y: elem.registo});\n                    }                       \n                    ),\n                    cintura: jsonData.cinturas.map((elem: any) => {                        \n                        var dt = new Date (elem.data);\n                        return Object.assign({}, {data: dt, y: elem.registo});\n                })\n                \n            });\n\n            }   \n        );\n    }\n\n    render() {\n\n\n        //----------------------------------------------------------------------\n\n        const noLegend={ legend: { display: false} }; \n        \n        //----------------------------------------------------------------------\n\n        var xPeso: any[] = [], yPeso: number[] = [];\n        this.state.peso.forEach((ref)=>{\n            xPeso.push(\"\"+ref.data.getDate()+\"/\"+(ref.data.getMonth()+1));\n            yPeso.push(ref.y);\n        });\n        var dataPeso: any = JSON.parse(JSON.stringify(generalGraphSettings));\n        dataPeso.labels = xPeso;\n        dataPeso.datasets[0].data = yPeso;\n\n        //----------------------------------------------------------------------\n\n/*\n\n        var dataMG_MM_PIE: any = JSON.parse(JSON.stringify(pieGraphSettings));\n        dataMG_MM_PIE.datasets[0].data = [this.state.massaMagra.pop()?.y,\n                                          this.state.massaGorda.pop()?.y];\n\n*/                                          \n\n        //----------------------------------------------------------------------\n\n        var xCintura : any[] = [], yCintura: number[] = [];\n        this.state.cintura.forEach((ref) => {\n            xCintura.push(\"\"+ref.data.getDate()+\"/\"+(ref.data.getMonth()+1));\n            yCintura.push(ref.y);\n        });\n        var dataCintura: any = JSON.parse(JSON.stringify(generalGraphSettings));\n        dataCintura.labels = xCintura;\n        dataCintura.datasets[0].data = yCintura;\n\n        //----------------------------------------------------------------------\n\n        var menuOp = this.state.menuOpt;\n        \n        if(this.state.menuOpt !== menuOp) {\n\n            this.setState( { menuOpt: menuOp } )\n        } \n\n        //----------------------------------------------------------------------\n\n        return(\n\n            <IonPage>\n            \n                {/* Page title */}\n\n                <IonHeader>\n                    <IonToolbar color=\"primary\">\n                        <IonTitle id=\"page-title\">Evolução</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n            \n                {/* Menu superior para escolha de grupo de gráficos */}\n            \n                <IonList>\n                    \n                    {/*\n                    <IonListHeader>\n                        <IonLabel></IonLabel>\n                    </IonListHeader>\n                    */}\n\n                    <IonItem>\n    \n                            <IonSelect className=\"SelectionMenuItem\" interfaceOptions={customActionSheetOptions} value={this.state.menuOpt} placeholder=\"Select One\" onIonChange={\n                                e =>this.setState( {menuOpt:e.detail.value})\n                            }>\n\n                                <IonSelectOption value=\"compoCorporalOption\">Composição corporal</IonSelectOption>\n                                <IonSelectOption value=\"perimCorporalOption\">Perímetros corporais</IonSelectOption>\n\n                            </IonSelect>\n                    </IonItem>\n\n                </IonList>\n\n                {/* Gráficos disponiveis */}\n\n                <IonContent className=\"ionContent\">\n                \n                <IonGrid className=\"grid\">\n\n                    <IonRow class=\"ion-justify-content-center\">\n                    \n                        {( () => {\n                            \n                            //Apresentar diferentes menus mediante a seleção\n                            switch(this.state.menuOpt) {\n                                \n                                //Caso a seleção de gráficos seja composição corporal\n                                case \"compoCorporalOption\": \n                                \n                                    return(\n\n                                        <React.Fragment>\n                                            \n                                            {/* Gráfico de Evolução do Peso */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Peso</div></IonCardTitle>\n                                                        <IonCardSubtitle><div className=\"textWrapper\">(em Kg)</div></IonCardSubtitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                                <div className=\"evoStats\">\n                                                    <Line ref=\"lineChart\" data={dataPeso} options={noLegend} />\n                                                </div>\n\n                                            </IonCol>\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">IMC</div></IonCardTitle>\n                                                        <IonCardSubtitle><div className=\"textWrapper\">(Índice)</div></IonCardSubtitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                                <div className=\"evoStats\">\n                                                    <Line ref=\"lineChart\" data={dataPeso} options={noLegend} />\n                                                </div>\n\n                                            </IonCol>\n\n                                        </React.Fragment>\n                                    );\n\n                                //Caso a seleção de gráficos seja composição corporal\n                                case \"perimCorporalOption\": \n                                \n                                    return(\n\n                                        <React.Fragment>\n                                            \n                                            {/* Gráfico de Evolução do Peso */}\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Cintura</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                                <div className=\"evoStats\">\n                                                    <Line ref=\"lineChart\" data={dataCintura} options={noLegend} />\n                                                </div>\n\n                                            </IonCol>\n\n                                        </React.Fragment>\n                                    );\n\n                                    default:\n                                        \n                                        return( \n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                                            {/* Empty option */}\n                                            </IonCol>\n                                        );\n\n                            } //close switch\n\n                        } //close anonymouse function\n                    ) ()}\n\n                    </IonRow>\n\n                </IonGrid>\n\n            </IonContent>\n            \n\n        </IonPage>\n        );\n    }\n\n}\n\nexport default Evolucao;"]},"metadata":{},"sourceType":"module"}