{"ast":null,"code":"import _regeneratorRuntime from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import IP_ADDR from\"./API_DEFAULTS\";export{};var baseURL=\"https://\"+IP_ADDR+\"/api/user\";//Returns the user object in case login OK\nexport function authenticate(_x,_x2){return _authenticate.apply(this,arguments);}function _authenticate(){_authenticate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,pass){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(baseURL+\"/authenticate\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:pass})});case 2:res=_context.sent;return _context.abrupt(\"return\",res);case 4:case\"end\":return _context.stop();}}},_callee);}));return _authenticate.apply(this,arguments);}export function getUserStatus(token){var res=fetch(baseURL+\"/status\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:token})});return res;}export function logout(token){console.log(\"Sending logout call with email \"+token);fetch(baseURL+\"/logout\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:token})});}export function createUserAPI(newUserObj){console.log(\"Sending call to create new User...\");var res=fetch(baseURL+\"/create\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(newUserObj)});return res;}export function updateUserDetailsAPI(_x3){return _updateUserDetailsAPI.apply(this,arguments);}function _updateUserDetailsAPI(){_updateUserDetailsAPI=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newUserObj){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"Sending call to create new User...\");res=fetch(baseURL+\"/update\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(newUserObj)});return _context2.abrupt(\"return\",res);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _updateUserDetailsAPI.apply(this,arguments);}export function getAllUsers(){return _getAllUsers.apply(this,arguments);}function _getAllUsers(){_getAllUsers=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:res=fetch(baseURL+\"/emails\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:localStorage.getItem(\"token\")})});return _context3.abrupt(\"return\",res);case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _getAllUsers.apply(this,arguments);}export function removeUser(email,type){var res=fetch(baseURL+\"/remove\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:localStorage.getItem(\"token\"),email:email,type:type})});return res;}export function selectUser(email){var res=fetch(baseURL+\"/select\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:localStorage.getItem(\"token\"),email:email})});return res;}export function getAllClients(){return _getAllClients.apply(this,arguments);}function _getAllClients(){_getAllClients=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:res=fetch(baseURL+\"/emails/clientes\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:localStorage.getItem(\"token\")})});return _context4.abrupt(\"return\",res);case 2:case\"end\":return _context4.stop();}}},_callee4);}));return _getAllClients.apply(this,arguments);}export function getAllClientsPremium(){return _getAllClientsPremium.apply(this,arguments);}function _getAllClientsPremium(){_getAllClientsPremium=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:res=fetch(baseURL+\"/emails/clientes/premium\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:localStorage.getItem(\"token\")})});return _context5.abrupt(\"return\",res);case 2:case\"end\":return _context5.stop();}}},_callee5);}));return _getAllClientsPremium.apply(this,arguments);}export function updateUserCat(settings){var res=fetch(baseURL+\"/categoria\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(settings)});return res;}export function getInstrutores(){return _getInstrutores.apply(this,arguments);}function _getInstrutores(){_getInstrutores=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var res;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:res=fetch(baseURL+\"/emails/instrutores\",{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({valueST:localStorage.getItem(\"token\")})});return _context6.abrupt(\"return\",res);case 2:case\"end\":return _context6.stop();}}},_callee6);}));return _getInstrutores.apply(this,arguments);}","map":{"version":3,"sources":["/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/models/API/UserAPI.ts"],"names":["IP_ADDR","baseURL","authenticate","email","pass","fetch","method","headers","body","JSON","stringify","password","res","getUserStatus","token","valueST","logout","console","log","createUserAPI","newUserObj","updateUserDetailsAPI","getAllUsers","localStorage","getItem","removeUser","type","selectUser","getAllClients","getAllClientsPremium","updateUserCat","settings","getInstrutores"],"mappings":"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","sourcesContent":["import IP_ADDR from \"./API_DEFAULTS\";\n\nexport {}\n\nvar baseURL: string = \"https://\" + IP_ADDR + \"/api/user\";\n\n//Returns the user object in case login OK\nexport async function authenticate (email: string, pass: string) {\n\n    const res = await fetch(baseURL + \"/authenticate\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email: email,\n            password: pass \n        })\n    });\n    return res;\n}\n\nexport function getUserStatus (token: string) {\n\n    const res = fetch(baseURL + \"/status\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: token\n        })\n    });\n\n    return res;\n}\n\nexport function logout(token: string) {\n\n    console.log(\"Sending logout call with email \" + token);\n\n    fetch(baseURL + \"/logout\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: token\n        })\n    });\n}\n\nexport function createUserAPI(newUserObj: any) {\n\n    console.log(\"Sending call to create new User...\");\n\n    const res = fetch(baseURL + \"/create\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUserObj)\n    });\n\n    return res;\n}\n\nexport async function updateUserDetailsAPI(newUserObj: any) {\n\n    console.log(\"Sending call to create new User...\");\n\n    const res = fetch(baseURL + \"/update\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUserObj)\n    });\n\n    return res;\n}\n\nexport async function getAllUsers () {\n\n    const res = fetch(baseURL + \"/emails\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}\n\nexport function removeUser (email:string, type:string) {\n\n    const res = fetch(baseURL + \"/remove\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\"),\n            email:email,\n            type:type\n        })\n    });\n\n    return res;\n}\n\nexport function selectUser (email:string) {\n\n    const res = fetch(baseURL + \"/select\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\"),\n            email:email\n        })\n    });\n\n    return res;\n}\n\nexport async function getAllClients () {\n\n    const res = fetch(baseURL + \"/emails/clientes\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}\n\nexport async function getAllClientsPremium () {\n\n    const res = fetch(baseURL + \"/emails/clientes/premium\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}\n\nexport function updateUserCat(settings: any) {\n\n    const res = fetch(baseURL + \"/categoria\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(settings)\n    });\n\n    return res;\n}\n\nexport async function getInstrutores () {\n\n    const res = fetch(baseURL + \"/emails/instrutores\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}"]},"metadata":{},"sourceType":"module"}