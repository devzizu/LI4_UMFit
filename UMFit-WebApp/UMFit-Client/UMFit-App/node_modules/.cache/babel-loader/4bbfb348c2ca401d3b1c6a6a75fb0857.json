{"ast":null,"code":"import IP_ADDR from \"./API_DEFAULTS\";\nexport {};\nvar baseURL = \"https://\" + IP_ADDR + \"/api/user\"; //Returns the user object in case login OK\n\nexport async function authenticate(email, pass) {\n  const res = await fetch(baseURL + \"/authenticate\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: pass\n    })\n  });\n  return res;\n}\nexport function getUserStatus(token) {\n  const res = fetch(baseURL + \"/status\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: token\n    })\n  });\n  return res;\n}\nexport function logout(token) {\n  console.log(\"Sending logout call with email \" + token);\n  fetch(baseURL + \"/logout\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: token\n    })\n  });\n}\nexport function createUserAPI(newUserObj) {\n  console.log(\"Sending call to create new User...\");\n  const res = fetch(baseURL + \"/create\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newUserObj)\n  });\n  return res;\n}\nexport async function updateUserDetailsAPI(newUserObj) {\n  console.log(\"Sending call to create new User...\");\n  const res = fetch(baseURL + \"/update\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newUserObj)\n  });\n  return res;\n}\nexport async function getAllUsers() {\n  const res = fetch(baseURL + \"/emails\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: localStorage.getItem(\"token\")\n    })\n  });\n  return res;\n}\nexport function removeUser(email, type) {\n  const res = fetch(baseURL + \"/remove\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: localStorage.getItem(\"token\"),\n      email: email,\n      type: type\n    })\n  });\n  return res;\n}\nexport function selectUser(email) {\n  const res = fetch(baseURL + \"/select\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: localStorage.getItem(\"token\"),\n      email: email\n    })\n  });\n  return res;\n}\nexport async function getAllClients() {\n  const res = fetch(baseURL + \"/emails/clientes\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: localStorage.getItem(\"token\")\n    })\n  });\n  return res;\n}\nexport async function getAllClientsPremium() {\n  const res = fetch(baseURL + \"/emails/clientes/premium\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: localStorage.getItem(\"token\")\n    })\n  });\n  return res;\n}\nexport function updateUserCat(settings) {\n  const res = fetch(baseURL + \"/categoria\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(settings)\n  });\n  return res;\n}\nexport async function getInstrutores() {\n  const res = fetch(baseURL + \"/emails/instrutores\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      valueST: localStorage.getItem(\"token\")\n    })\n  });\n  return res;\n}","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/models/API/UserAPI.ts"],"names":["IP_ADDR","baseURL","authenticate","email","pass","res","fetch","method","headers","body","JSON","stringify","password","getUserStatus","token","valueST","logout","console","log","createUserAPI","newUserObj","updateUserDetailsAPI","getAllUsers","localStorage","getItem","removeUser","type","selectUser","getAllClients","getAllClientsPremium","updateUserCat","settings","getInstrutores"],"mappings":"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","sourcesContent":["import IP_ADDR from \"./API_DEFAULTS\";\n\nexport {}\n\nvar baseURL: string = \"https://\" + IP_ADDR + \"/api/user\";\n\n//Returns the user object in case login OK\nexport async function authenticate (email: string, pass: string) {\n\n    const res = await fetch(baseURL + \"/authenticate\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email: email,\n            password: pass \n        })\n    });\n    return res;\n}\n\nexport function getUserStatus (token: string) {\n\n    const res = fetch(baseURL + \"/status\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: token\n        })\n    });\n\n    return res;\n}\n\nexport function logout(token: string) {\n\n    console.log(\"Sending logout call with email \" + token);\n\n    fetch(baseURL + \"/logout\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: token\n        })\n    });\n}\n\nexport function createUserAPI(newUserObj: any) {\n\n    console.log(\"Sending call to create new User...\");\n\n    const res = fetch(baseURL + \"/create\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUserObj)\n    });\n\n    return res;\n}\n\nexport async function updateUserDetailsAPI(newUserObj: any) {\n\n    console.log(\"Sending call to create new User...\");\n\n    const res = fetch(baseURL + \"/update\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUserObj)\n    });\n\n    return res;\n}\n\nexport async function getAllUsers () {\n\n    const res = fetch(baseURL + \"/emails\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}\n\nexport function removeUser (email:string, type:string) {\n\n    const res = fetch(baseURL + \"/remove\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\"),\n            email:email,\n            type:type\n        })\n    });\n\n    return res;\n}\n\nexport function selectUser (email:string) {\n\n    const res = fetch(baseURL + \"/select\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\"),\n            email:email\n        })\n    });\n\n    return res;\n}\n\nexport async function getAllClients () {\n\n    const res = fetch(baseURL + \"/emails/clientes\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}\n\nexport async function getAllClientsPremium () {\n\n    const res = fetch(baseURL + \"/emails/clientes/premium\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}\n\nexport function updateUserCat(settings: any) {\n\n    const res = fetch(baseURL + \"/categoria\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(settings)\n    });\n\n    return res;\n}\n\nexport async function getInstrutores () {\n\n    const res = fetch(baseURL + \"/emails/instrutores\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            valueST: localStorage.getItem(\"token\")\n        })\n    });\n    \n\n    return res;\n}"]},"metadata":{},"sourceType":"module"}