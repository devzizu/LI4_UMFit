{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/components/LogIn.tsx\";\nimport React, { useState } from 'react';\nimport sha256 from \"fast-sha256\"; //import axios from 'axios';\n\nimport './css/LogIn.css';\nimport { IonInput, IonText, IonButton, IonLoading, IonAlert } from '@ionic/react';\nvar baseURL = \"https://192.168.1.67:5001/api/user\";\nvar datapost = \"\";\n\nconst authenticate = async (email, pass) => {\n  const res = await fetch(baseURL + \"/authenticate\", {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: pass\n    })\n  });\n  return await res.json();\n};\n\nconst LogIn = () => {\n  const [showLoading, setShowLoading] = useState(false);\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [showAlert1, setShowAlert1] = useState(false);\n  /* Future use\n  const [data, setData] = useState({\n      email: \"not_fetched\",\n      password: \"not_fetched\"\n  });\n  */\n\n  setTimeout(() => {\n    setShowLoading(false);\n  }, 2000);\n  /* Future use\n  useEffect(() => {\n      const res = authenticate(emailValue, passwordValue);\n  }, []);\n  */\n\n  return React.createElement(\"div\", {\n    id: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"phrase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(IonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"O teu gin\\xE1sio da UMinho...\")), React.createElement(\"div\", {\n    id: \"input-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(IonInput, {\n    required: true,\n    type: \"email\",\n    id: \"email-input\",\n    placeholder: \"E-Mail\",\n    value: emailValue,\n    onIonChange: e => {\n      setEmailValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(IonInput, {\n    required: true,\n    type: \"password\",\n    id: \"pass-input\",\n    placeholder: \"Password\",\n    value: passwordValue,\n    onIonChange: e => {\n      setPasswordValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(IonButton, {\n    expand: \"block\",\n    type: \"submit\",\n    id: \"login-button\",\n    onClick: () => {\n      setShowLoading(true);\n      let pass_enc = new TextEncoder();\n      let encoded = pass_enc.encode(passwordValue);\n      let hash256 = Buffer.from(sha256(encoded)).toString('hex').toUpperCase();\n      console.log(\"Http post to api/user/authenticate:\");\n      console.log(\"> E-Mail: \" + emailValue);\n      console.log(\"> Password: \" + passwordValue);\n      console.log(\"> Password (sha256): \" + hash256); //request\n\n      let json_res = authenticate(emailValue, passwordValue);\n      json_res.then(function (value) {\n        datapost = value;\n      });\n      setShowAlert1(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Log-In\"), React.createElement(IonLoading, {\n    isOpen: showLoading,\n    onDidDismiss: () => setShowLoading(false),\n    message: 'Espere um momento...',\n    duration: 5000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(IonAlert, {\n    isOpen: showAlert1,\n    onDidDismiss: () => setShowAlert1(false),\n    header: 'Alert',\n    subHeader: 'Subtitle',\n    message: datapost,\n    buttons: ['OK'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n};\n\nexport default LogIn;","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/components/LogIn.tsx"],"names":["React","useState","sha256","IonInput","IonText","IonButton","IonLoading","IonAlert","baseURL","datapost","authenticate","email","pass","res","fetch","method","headers","body","JSON","stringify","password","json","LogIn","showLoading","setShowLoading","emailValue","setEmailValue","passwordValue","setPasswordValue","showAlert1","setShowAlert1","setTimeout","e","target","value","pass_enc","TextEncoder","encoded","encode","hash256","Buffer","from","toString","toUpperCase","console","log","json_res","then"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\n\nimport sha256 from \"fast-sha256\";\n//import axios from 'axios';\n\nimport './css/LogIn.css';\nimport { IonInput, IonText, IonButton, IonLoading, IonAlert } from '@ionic/react';\n\nvar baseURL: string = \"https://192.168.1.67:5001/api/user\";\nvar datapost = \"\";\n\ninterface User {\n    id: number,\n    email: string,\n    password: string\n}\n\nconst authenticate = async (email: string, pass: string) => {\n\n    const res = await fetch(baseURL + \"/authenticate\", {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email: email,\n            password: pass \n        })\n    });\n\n    return await res.json();\n}\n\nconst LogIn: React.FC = () => {\n\n    const [showLoading, setShowLoading] = useState(false);\n    const [emailValue, setEmailValue] = useState<string>(\"\");\n    const [passwordValue, setPasswordValue] = useState<string>(\"\");\n    \n    const [showAlert1, setShowAlert1] = useState(false);\n\n    /* Future use\n    const [data, setData] = useState({\n        email: \"not_fetched\",\n        password: \"not_fetched\"\n    });\n    */\n\n    setTimeout(() => {\n        setShowLoading(false);\n    }, 2000);\n    \n    /* Future use\n    useEffect(() => {\n        const res = authenticate(emailValue, passwordValue);\n    }, []);\n    */\n\n    return (\n        <div id=\"login-form\">\n            <div id=\"Logo\"></div>\n            <div id=\"phrase\">\n                <IonText>O teu ginásio da UMinho...</IonText>\n            </div>\n        <div id=\"input-form\">\n            <br></br>\n            <IonInput required type=\"email\" id=\"email-input\" placeholder=\"E-Mail\"\n            value={emailValue}\n            onIonChange={(e) => {\n                setEmailValue((e.target as HTMLInputElement).value);\n            }}>\n            </IonInput>\n            <br></br>\n            <IonInput required type=\"password\" id=\"pass-input\" placeholder=\"Password\"\n            value={passwordValue}\n            onIonChange={(e) => {\n                setPasswordValue((e.target as HTMLInputElement).value);\n            }}>\n            </IonInput>\n        </div>\n        <IonButton expand=\"block\" type=\"submit\" id=\"login-button\" onClick={() => {\n                \n                setShowLoading(true);\n\n                let pass_enc = new TextEncoder();\n                let encoded = pass_enc.encode(passwordValue);\n                let hash256 = Buffer.from(sha256(encoded)).toString('hex').toUpperCase();\n\n                console.log(\"Http post to api/user/authenticate:\");\n                console.log(\"> E-Mail: \" + emailValue);\n                console.log(\"> Password: \" + passwordValue);\n                console.log(\"> Password (sha256): \" + hash256);\n\n                //request\n                let json_res = authenticate(emailValue, passwordValue);\n\n                json_res.then(function(value) {\n                    \n                    datapost = value;\n                });\n\n                setShowAlert1(true);\n            }\n        }>\n            Log-In\n\n        </IonButton>\n            <IonLoading\n                isOpen={showLoading}\n                onDidDismiss={() => setShowLoading(false)}\n                message={'Espere um momento...'}\n                duration={5000}\n            />\n        <IonAlert\n          isOpen={showAlert1}\n          onDidDismiss={() => setShowAlert1(false)}\n          header={'Alert'}\n          subHeader={'Subtitle'}\n          message={datapost}\n          buttons={['OK']}\n        />\n        </div>\n\n        \n    );\n};\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}