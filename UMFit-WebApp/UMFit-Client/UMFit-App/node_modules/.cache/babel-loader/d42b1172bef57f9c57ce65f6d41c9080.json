{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/Evolucao.tsx\";\nimport React from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardHeader, IonCardTitle, IonGrid, IonRow, IonCol, IonList, IonListHeader, IonLabel, IonItem, IonSelect, IonSelectOption } from \"@ionic/react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"./css/Evolucao.css\";\n\nclass Evolucao extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.state = {\n      peso: new Array(),\n      imc: new Array(),\n      mGorda: new Array(),\n      mMagra: new Array(),\n      idadeMeta: new Array(),\n      menuOpt: new String()\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      peso: [{\n        data: new Date(2020, 0, 21),\n        y: 98\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 95\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 93\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 88\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 82\n      }],\n      imc: [{\n        data: new Date(2020, 0, 21),\n        y: 8\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 5\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 3\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 2.3\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 2.1\n      }],\n      mGorda: [{\n        data: new Date(2020, 0, 21),\n        y: 50\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 47\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 42\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 38\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 27\n      }],\n      mMagra: [{\n        data: new Date(2020, 0, 21),\n        y: 23\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 25\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 33\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 36\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 39\n      }],\n      idadeMeta: [{\n        data: new Date(2020, 0, 21),\n        y: 269\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 112\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 82\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 69\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 12\n      }]\n    });\n  }\n\n  render() {\n    const noLegend = {\n      legend: {\n        display: false\n      }\n    }; //Load Peso\n\n    var xPeso = [];\n    var yPeso = [];\n    const peso = this.state.peso;\n    peso.forEach(ref => {\n      xPeso.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yPeso.push(ref.y);\n    });\n    const dataPeso = {\n      labels: xPeso,\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: yPeso\n      }]\n    }; //Load IMC\n\n    var xImc = [];\n    var yImc = [];\n    const imc = this.state.imc;\n    imc.forEach(ref => {\n      xImc.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yImc.push(ref.y);\n    });\n    const dataImc = {\n      labels: xImc,\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: yImc\n      }]\n    }; //Load Massa Gorda\n\n    var xMGorda = [];\n    var yMGorda = [];\n    const mgorda = this.state.mGorda;\n    mgorda.forEach(ref => {\n      xMGorda.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yMGorda.push(ref.y);\n    });\n    const dataMGorda = {\n      labels: xMGorda,\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: yMGorda\n      }]\n    }; //Load Percent Massa Gorda\n\n    var xPMGorda = [];\n    var yPMGorda = [];\n\n    for (let i = 0; i < mgorda.length; i++) {\n      var ref = mgorda[i];\n      var dateNow = ref.data;\n      var pesoNow = peso[i].y;\n      xPMGorda.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yPMGorda.push((100 * ref.y / pesoNow).toPrecision(3));\n    }\n\n    const dataPMGorda = {\n      labels: xPMGorda,\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: yPMGorda\n      }]\n    }; //Load Massa Magra\n\n    var xMMagra = [];\n    var yMMagra = [];\n    const mMagra = this.state.mMagra;\n    mMagra.forEach(ref => {\n      xMMagra.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yMMagra.push(ref.y);\n    });\n    const dataMMagra = {\n      labels: xMMagra,\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: yMMagra\n      }]\n    }; //Load Idade Metabolica\n\n    var xIdadeMeta = [];\n    var yIdadeMeta = [];\n    const idadeMeta = this.state.idadeMeta;\n    idadeMeta.forEach(ref => {\n      xIdadeMeta.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yIdadeMeta.push(ref.y);\n    });\n    const dataIdadeMeta = {\n      labels: xIdadeMeta,\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: yIdadeMeta\n      }]\n    };\n    var menuOp = this.state.menuOpt;\n    if (this.state.menuOpt != menuOp) this.setState({\n      menuOpt: menuOp\n    });\n    var graph;\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(IonHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(IonToolbar, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(IonTitle, {\n      id: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Evolu\\xE7\\xE3o\"))), React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(IonListHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Single Selection\")), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Graficos\"), React.createElement(IonSelect, {\n      value: this.state.menuOpt,\n      placeholder: \"Select One\",\n      onIonChange: e => this.setState({\n        menuOpt: e.detail.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(IonSelectOption, {\n      value: \"pesos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Pesos\"), React.createElement(IonSelectOption, {\n      value: \"imc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"IMC\"), React.createElement(IonSelectOption, {\n      value: \"idadeMeta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Idade Metabolica\")))), React.createElement(IonContent, {\n      className: \"ionContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      class: \"ion-justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, (() => {\n      switch (this.state.menuOpt) {\n        case \"pesos\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          }, React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }, \"Peso\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataPeso,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332\n            },\n            __self: this\n          }, \"Massa Gorda\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataMGorda,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }, \"Percentagem de Massa Gorda\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataPMGorda,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 350\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352\n            },\n            __self: this\n          }, \"Massa Magra\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataMMagra,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          }))));\n\n        case \"idadeMeta\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 362\n            },\n            __self: this\n          }, React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 363\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }, \"Idade Metabolica\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataIdadeMeta,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370\n            },\n            __self: this\n          }))));\n\n        case \"imc\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 376\n            },\n            __self: this\n          }, React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 377\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          }, \"IMC\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 383\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataImc,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 384\n            },\n            __self: this\n          }))));\n\n        default:\n          return React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390\n            },\n            __self: this\n          });\n      }\n    })()))));\n  }\n\n} //Peso, IMC,MassaGorda(kg/%)), Massa magra(kg/%),Idade Metabolica\n\n\nexport default Evolucao;","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/Evolucao.tsx"],"names":["React","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","IonCard","IonCardHeader","IonCardTitle","IonGrid","IonRow","IonCol","IonList","IonListHeader","IonLabel","IonItem","IonSelect","IonSelectOption","Line","Evolucao","Component","constructor","props","state","peso","Array","imc","mGorda","mMagra","idadeMeta","menuOpt","String","componentDidMount","setState","data","Date","y","render","noLegend","legend","display","xPeso","yPeso","forEach","ref","push","getMonth","getDay","dataPeso","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","xImc","yImc","dataImc","xMGorda","yMGorda","mgorda","dataMGorda","xPMGorda","yPMGorda","i","length","dateNow","pesoNow","toPrecision","dataPMGorda","xMMagra","yMMagra","dataMMagra","xIdadeMeta","yIdadeMeta","dataIdadeMeta","menuOp","graph","e","detail","value"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardHeader, IonCardTitle,  IonGrid, IonRow, IonCol, IonTab, IonTabs, IonTabBar, IonTabButton, IonList, IonListHeader, IonLabel, IonItem, IonSelect, IonSelectOption } from \"@ionic/react\";\nimport{Line} from \"react-chartjs-2\";\n\nimport \"./css/Evolucao.css\";\n\ninterface registoAvaliacao {\n    data: Date,\n    y: number\n}\n\nclass Evolucao extends React.Component {\n\n    state: {\n        peso: Array<registoAvaliacao>\n        imc: Array<registoAvaliacao>\n        mGorda: Array<registoAvaliacao>\n        mMagra: Array<registoAvaliacao>\n        idadeMeta: Array<registoAvaliacao>\n        menuOpt:String\n    }\n\n    \n\n    constructor(props: any) {\n\n        super(props);        \n        this.state = ({\n            peso: new Array<registoAvaliacao>(),\n            imc: new Array<registoAvaliacao>(),\n            mGorda: new Array<registoAvaliacao>(),\n            mMagra: new Array<registoAvaliacao>(),\n            idadeMeta: new Array<registoAvaliacao>(),\n            menuOpt: new String()\n                });\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            peso: [\n                {data: new Date(2020, 0, 21), y: 98},\n                {data: new Date(2020, 3, 2), y: 95},\n                {data: new Date(2020, 5, 23), y: 93},\n                {data: new Date(2020, 7, 12), y: 88},\n                {data: new Date(2020, 10, 18), y: 82}\n            ],\n            imc: [\n                {data: new Date(2020, 0, 21), y: 8},\n                {data: new Date(2020, 3, 2), y: 5},\n                {data: new Date(2020, 5, 23), y: 3},\n                {data: new Date(2020, 7, 12), y: 2.3},\n                {data: new Date(2020, 10, 18), y: 2.1}\n            ],\n            mGorda: [\n                {data: new Date(2020, 0, 21), y: 50},\n                {data: new Date(2020, 3, 2), y: 47},\n                {data: new Date(2020, 5, 23), y: 42},\n                {data: new Date(2020, 7, 12), y: 38},\n                {data: new Date(2020, 10, 18), y: 27}\n            ],\n            mMagra: [\n                {data: new Date(2020, 0, 21), y: 23},\n                {data: new Date(2020, 3, 2), y: 25},\n                {data: new Date(2020, 5, 23), y: 33},\n                {data: new Date(2020, 7, 12), y: 36},\n                {data: new Date(2020, 10, 18), y: 39}\n            ],\n            idadeMeta: [\n                {data: new Date(2020, 0, 21), y: 269},\n                {data: new Date(2020, 3, 2), y: 112},\n                {data: new Date(2020, 5, 23), y: 82},\n                {data: new Date(2020, 7, 12), y: 69},\n                {data: new Date(2020, 10, 18), y: 12}\n            ]\n        });\n    }\n\n    render() {\n        const noLegend={\n            legend:{\n                display:false\n            }\n        }\n        //Load Peso\n        var xPeso : any[] = [];\n        var yPeso: number[] = [];\n        const peso = this.state.peso;\n        peso.forEach((ref)=>{xPeso.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());yPeso.push(ref.y);}); \n        const dataPeso={\n            labels: xPeso,\n  datasets: [\n    {\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: yPeso\n    }\n  ]\n\n        };\n        //Load IMC\n        var xImc : any[] = [];\n        var yImc: number[] = [];\n        const imc = this.state.imc;\n        imc.forEach((ref)=>{xImc.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());yImc.push(ref.y);}); \n        const dataImc={\n            labels: xImc,\n  datasets: [\n    {\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: yImc\n    }\n  ]\n\n        };\n         //Load Massa Gorda\n         var xMGorda : any[] = [];\n         var yMGorda: number[] = [];\n         const mgorda = this.state.mGorda;\n         mgorda.forEach((ref)=>{xMGorda.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());yMGorda.push(ref.y);}); \n         const dataMGorda={\n             labels: xMGorda,\n   datasets: [\n     {\n       fill: false,\n       lineTension: 0.1,\n       backgroundColor: 'rgba(75,192,192,0.4)',\n       borderColor: 'rgba(75,192,192,1)',\n       borderCapStyle: 'butt',\n       borderDash: [],\n       borderDashOffset: 0.0,\n       borderJoinStyle: 'miter',\n       pointBorderColor: 'rgba(75,192,192,1)',\n       pointBackgroundColor: '#fff',\n       pointBorderWidth: 1,\n       pointHoverRadius: 5,\n       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n       pointHoverBorderColor: 'rgba(220,220,220,1)',\n       pointHoverBorderWidth: 2,\n       pointRadius: 1,\n       pointHitRadius: 10,\n       data: yMGorda\n     }\n   ]\n \n         };\n         //Load Percent Massa Gorda\n         var xPMGorda : any[] = [];\n         var yPMGorda: any[] = [];\n         \n         for(let i=0;i<mgorda.length;i++){\n            var ref= mgorda[i];\n            var dateNow=ref.data;\n             var pesoNow:number=peso[i].y;\n             xPMGorda.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());\n             yPMGorda.push((100*ref.y/pesoNow).toPrecision(3));\n         }\n      \n         const dataPMGorda={\n             labels: xPMGorda,\n   datasets: [\n     {\n       fill: false,\n       lineTension: 0.1,\n       backgroundColor: 'rgba(75,192,192,0.4)',\n       borderColor: 'rgba(75,192,192,1)',\n       borderCapStyle: 'butt',\n       borderDash: [],\n       borderDashOffset: 0.0,\n       borderJoinStyle: 'miter',\n       pointBorderColor: 'rgba(75,192,192,1)',\n       pointBackgroundColor: '#fff',\n       pointBorderWidth: 1,\n       pointHoverRadius: 5,\n       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n       pointHoverBorderColor: 'rgba(220,220,220,1)',\n       pointHoverBorderWidth: 2,\n       pointRadius: 1,\n       pointHitRadius: 10,\n       data: yPMGorda\n     }\n   ]\n \n         };\n\n         //Load Massa Magra\n         var xMMagra : any[] = [];\n         var yMMagra: number[] = [];\n         const mMagra = this.state.mMagra;\n         mMagra.forEach((ref)=>{xMMagra.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());yMMagra.push(ref.y);}); \n         const dataMMagra={\n             labels: xMMagra,\n   datasets: [\n     {\n       fill: false,\n       lineTension: 0.1,\n       backgroundColor: 'rgba(75,192,192,0.4)',\n       borderColor: 'rgba(75,192,192,1)',\n       borderCapStyle: 'butt',\n       borderDash: [],\n       borderDashOffset: 0.0,\n       borderJoinStyle: 'miter',\n       pointBorderColor: 'rgba(75,192,192,1)',\n       pointBackgroundColor: '#fff',\n       pointBorderWidth: 1,\n       pointHoverRadius: 5,\n       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n       pointHoverBorderColor: 'rgba(220,220,220,1)',\n       pointHoverBorderWidth: 2,\n       pointRadius: 1,\n       pointHitRadius: 10,\n       data: yMMagra\n     }\n   ]\n \n         };\n         \n            //Load Idade Metabolica\n            var xIdadeMeta : any[] = [];\n            var yIdadeMeta: number[] = [];\n            const idadeMeta = this.state.idadeMeta;\n            idadeMeta.forEach((ref)=>{xIdadeMeta.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());yIdadeMeta.push(ref.y);}); \n            const dataIdadeMeta={\n                labels: xIdadeMeta,\n      datasets: [\n        {\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: yIdadeMeta\n        }\n      ]\n    \n            };\n            var menuOp=this.state.menuOpt;\n            if(this.state.menuOpt!=menuOp) this.setState({menuOpt:menuOp})\n            var graph;\n            \n\n\n            \n         \n        return(\n            <IonPage>\n                <IonHeader>\n                    <IonToolbar color=\"primary\">\n                        <IonTitle id=\"page-title\">Evolução</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonList>\n                         <IonListHeader>\n                            <IonLabel>Single Selection</IonLabel>\n                         </IonListHeader>\n\n                    <IonItem>\n            <IonLabel>Graficos</IonLabel>\n            <IonSelect value={this.state.menuOpt} placeholder=\"Select One\" onIonChange={e =>this.setState( {menuOpt:e.detail.value})}>\n              <IonSelectOption value=\"pesos\">Pesos</IonSelectOption>\n              <IonSelectOption value=\"imc\">IMC</IonSelectOption>\n              <IonSelectOption value=\"idadeMeta\">Idade Metabolica</IonSelectOption>\n            </IonSelect>\n          </IonItem>\n          </IonList>\n\n                <IonContent className=\"ionContent\">\n                    \n                <IonGrid className=\"grid\">\n                    <IonRow class=\"ion-justify-content-center\">\n                        {(()=>{\n                            switch(this.state.menuOpt){\n                                case \"pesos\": return(\n                                <React.Fragment>\n                                <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                                    <IonCard className=\"titleCard\">\n                                        <IonCardHeader>\n                                            <IonCardTitle><div className=\"textWrapper\">Peso</div></IonCardTitle>\n                                        </IonCardHeader>\n                                    </IonCard>\n                                    <div className=\"evoStats\">\n                                        <Line ref=\"lineChart\" data={dataPeso} options={noLegend} />\n                                    </div>\n                                </IonCol>\n                                <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                                <IonCard className=\"titleCard\">\n                                    <IonCardHeader>\n                                        <IonCardTitle><div className=\"textWrapper\">Massa Gorda</div></IonCardTitle>\n                                    </IonCardHeader>\n                                </IonCard>\n                                <div className=\"evoStats\">\n                                    <Line ref=\"lineChart\" data={dataMGorda} options={noLegend} />\n                                </div>\n                                </IonCol>\n                                <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                                <IonCard className=\"titleCard\">\n                                    <IonCardHeader>\n                                        <IonCardTitle><div className=\"textWrapper\">Percentagem de Massa Gorda</div></IonCardTitle>\n                                    </IonCardHeader>\n                                </IonCard>\n                                <div className=\"evoStats\">\n                                    <Line ref=\"lineChart\" data={dataPMGorda} options={noLegend} />\n                                </div>\n                                </IonCol>\n                                <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                                <IonCard className=\"titleCard\">\n                                    <IonCardHeader>\n                                        <IonCardTitle><div className=\"textWrapper\">Massa Magra</div></IonCardTitle>\n                                    </IonCardHeader>\n                                </IonCard>\n                                <div className=\"evoStats\">\n                                    <Line ref=\"lineChart\" data={dataMMagra} options={noLegend} />\n                                </div>\n                                </IonCol>\n                                </React.Fragment>\n                        );\n                        case \"idadeMeta\":return(\n                            <React.Fragment>\n                                <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                            <IonCard className=\"titleCard\">\n                                <IonCardHeader>\n                                    <IonCardTitle><div className=\"textWrapper\">Idade Metabolica</div></IonCardTitle>\n                                </IonCardHeader>\n                            </IonCard>\n                            <div className=\"evoStats\">\n                                <Line ref=\"lineChart\" data={dataIdadeMeta} options={noLegend} />\n                            </div>\n                        </IonCol>\n                            </React.Fragment>\n                        );\n                        case \"imc\":return(\n                            <React.Fragment>\n                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                            <IonCard className=\"titleCard\">\n                                <IonCardHeader>\n                                    <IonCardTitle><div className=\"textWrapper\">IMC</div></IonCardTitle>\n                                </IonCardHeader>\n                            </IonCard>\n                            <div className=\"evoStats\">\n                                <Line ref=\"lineChart\" data={dataImc} options={noLegend} />\n                            </div>\n                        </IonCol>\n                        </React.Fragment>\n                        );\n                        default:return( \n                        <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                        </IonCol>\n                    );\n                            }}\n                        )()}\n\n                    </IonRow>\n                </IonGrid>\n            </IonContent>\n        </IonPage>\n        );\n    }\n\n}\n//Peso, IMC,MassaGorda(kg/%)), Massa magra(kg/%),Idade Metabolica\n\nexport default Evolucao;"]},"metadata":{},"sourceType":"module"}