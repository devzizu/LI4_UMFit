{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/ShowPlanoTreino.tsx\";\nimport React from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonFooter, IonContent, IonCard, IonGrid, IonRow, IonLabel, IonCol, IonButton, IonItem, IonIcon } from \"@ionic/react\";\nimport \"./css/ShowPlanoTreino.css\";\nimport { barbellOutline, hourglassOutline, informationOutline } from \"ionicons/icons\";\nimport { getPlanosTreino } from \"../../models/API/PlanoTreinoAPI\"; //Pernas imgs\n\nvar agachamento_frontal = require(\"../../imgs/exercicios/Agachamento_Frontal.png\");\n\nvar agachamento_halter = require(\"../../imgs/exercicios/Agachamento_Halter.png\");\n\nvar agachamento_normal = require(\"../../imgs/exercicios/Agachamento_Normal_Barra.png\");\n\nvar cadeira_extensora = require(\"../../imgs/exercicios/Cadeira_Extensora.png\");\n\nvar cadeira_adutora = require(\"../../imgs/exercicios/Cadeira_Adutora.png\"); //Peito imgs\n\n\nvar afundos = require(\"../../imgs/exercicios/Afundos.png\");\n\nvar pack_deck = require('../../imgs/exercicios/Pack_Deck.png');\n\nvar peito_press_maquina = require(\"../../imgs/exercicios/Peito_Press_Maquina.png\");\n\nvar supino_normal_halters = require(\"../../imgs/exercicios/Supino_Normal_Halters.png\"); //Tricep imgs\n\n\nvar tricep_corda = require(\"../../imgs/exercicios/Tricep_Corda.png\");\n\nvar tricep_frances_barra = require(\"../../imgs/exercicios/Tricep_Frances_Barra.png\");\n\nvar tricep_kickback = require('../../imgs/exercicios/Tricep_KickBack_Corda.png'); //Costas imgs\n\n\nvar costa_maquina = require(\"../../imgs/exercicios/Costas_Máquina.png\");\n\nvar costas_pushada = require(\"../../imgs/exercicios/Costas_Pushada.png\");\n\nvar elevacoes = require(\"../../imgs/exercicios/Elevações_Barra.png\");\n\nvar serrote_sentado = require(\"../../imgs/exercicios/Serrote_Sentado.png\"); //Povoar o plano de treino com dados reais quando fizer a API ------------------------------------------------------------\n\n\nconst Supino_Normal_Halters = {\n  nome: \"Supino c/ Halters\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Pack_Deck = {\n  nome: \"Pack Deck\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Afundos = {\n  nome: \"Afundos\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Peito_Press_Maquina = {\n  nome: \"Máquina Press Peito\",\n  nm_repeticoes: \"15\",\n  nm_series: \"3\"\n};\nconst Tricep_Corda = {\n  nome: \"Tricep c/ Corda\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Tricep_Frances_Barra = {\n  nome: \"Tricep Francês c/ Barra\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Tricep_KickBack_Corda = {\n  nome: \"Tricep Kick-Back c/ Corda\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Agachamento_Frontal = {\n  nome: \"Agachamento Frontal\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Agachamento_Halter = {\n  nome: \"Agachamento c/ Halter\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Agachamento_Normal_Barra = {\n  nome: \"Agachamento Normal c/ Barra\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Cadeira_Adutora = {\n  nome: \"Cadeira Adutora\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Cadeira_Extensora = {\n  nome: \"Cadeira Extensora\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Costas_Maquina = {\n  nome: \"Máquina de Costas\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Elevacoes_Barra = {\n  nome: \"Elevações na Barra\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Costas_Pushada = {\n  nome: \"Pushada\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst Serrote_Sentado = {\n  nome: \"Serrote\",\n  nm_repeticoes: \"12\",\n  nm_series: \"4\"\n};\nconst peito = {\n  nome: \"Peito\",\n  tipo: \"Hipertrofia\",\n  grupos_musculares: \"Peito\",\n  frequencia: \"2/semana\",\n  data_fim: \"\",\n  lista_exercicios: [Supino_Normal_Halters, Pack_Deck, Afundos, Peito_Press_Maquina]\n};\nconst empty = {\n  nome: \"Não tem um plano ainda!\",\n  tipo: \"\",\n  grupos_musculares: \"\",\n  frequencia: \"\",\n  data_fim: \"\",\n  lista_exercicios: []\n};\nconst tricep = {\n  nome: \"Tricep\",\n  tipo: \"Hipertrofia\",\n  grupos_musculares: \"Tricep\",\n  frequencia: \"2/semana\",\n  data_fim: \"\",\n  lista_exercicios: [Tricep_Corda, Tricep_Frances_Barra, Tricep_KickBack_Corda, Afundos]\n};\nconst costas = {\n  nome: \"Costas\",\n  tipo: \"Hipertrofia\",\n  grupos_musculares: \"Costas\",\n  frequencia: \"2/semana\",\n  data_fim: \"\",\n  lista_exercicios: [Costas_Maquina, Costas_Pushada, Elevacoes_Barra, Serrote_Sentado]\n};\nconst pernas = {\n  nome: \"Pernas\",\n  tipo: \"Hipertrofia\",\n  grupos_musculares: \"Pernas\",\n  frequencia: \"2/semana\",\n  data_fim: \"\",\n  lista_exercicios: [Agachamento_Frontal, Agachamento_Halter, Agachamento_Normal_Barra, Cadeira_Adutora, Cadeira_Extensora]\n}; //--------------------------------------------------------------------------------------------------------------------\n\nclass ShowPlanoTreino extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.state = {\n      planotreino: {\n        nome: \"\",\n        tipo: \"\",\n        grupos_musculares: \"\",\n        frequencia: \"\",\n        data_fim: \"\",\n        lista_exercicios: []\n      },\n      exercicio_atual: {\n        nome: \"\",\n        nm_repeticoes: \"\",\n        nm_series: \"\"\n      },\n      indice_plano: 0,\n      lista_plano_treino: [peito, costas, pernas, tricep],\n      user: this.props.user\n    };\n  }\n\n  planoanterior() {\n    var index = this.state.indice_plano;\n\n    if (index > 0) {\n      index--;\n    }\n\n    this.setState({\n      indice_plano: index\n    });\n  }\n\n  proximoplano() {\n    var index = this.state.indice_plano;\n\n    if (index < this.state.lista_plano_treino.length - 1) {\n      index++;\n    }\n\n    this.setState({\n      indice_plano: index\n    });\n  }\n\n  exercicioToImagem(nome) {\n    switch (nome) {\n      case \"Supino c/ Halters\":\n        {\n          return supino_normal_halters;\n        }\n\n      case \"Pack Deck\":\n        {\n          return pack_deck;\n        }\n\n      case \"Afundos\":\n        {\n          return afundos;\n        }\n\n      case \"Máquina Press Peito\":\n        {\n          return peito_press_maquina;\n        }\n\n      case \"Tricep c/ Corda\":\n        {\n          return tricep_corda;\n        }\n\n      case \"Tricep Francês c/ Barra\":\n        {\n          return tricep_frances_barra;\n        }\n\n      case \"Tricep Kick-Back c/ Corda\":\n        {\n          return tricep_kickback;\n        }\n\n      case \"Agachamento Frontal\":\n        {\n          return agachamento_frontal;\n        }\n\n      case \"Agachamento c/ Halter\":\n        {\n          return agachamento_halter;\n        }\n\n      case \"Agachamento Normal c/ Barra\":\n        {\n          return agachamento_normal;\n        }\n\n      case \"Cadeira Adutora\":\n        {\n          return cadeira_adutora;\n        }\n\n      case \"Cadeira Extensora\":\n        {\n          return cadeira_extensora;\n        }\n\n      case \"Máquina de Costas\":\n        {\n          return costa_maquina;\n        }\n\n      case \"Elevações na Barra\":\n        {\n          return elevacoes;\n        }\n\n      case \"Pushada\":\n        {\n          return costas_pushada;\n        }\n\n      case \"Serrote\":\n        {\n          return serrote_sentado;\n        }\n\n      default:\n        break;\n    }\n  }\n\n  async componentDidMount() {\n    await getPlanosTreino(this.state.user.email).then(async value => {\n      if (value.status === 200) {\n        var json = value.json();\n        await json.then(value => {\n          var resultList = [];\n\n          for (var i = 0; i < value.length; i++) {\n            var exerciciosList = value[i].exercicios;\n            var planoRes = Object.assign(value[i], {\n              lista_exercicios: exerciciosList,\n              grupos_musculares: value[i].grupo_muscular,\n              tipo: \"esqueceram-se de mim\"\n            });\n            delete planoRes.exercicios;\n            delete planoRes.grupo_muscular;\n            planoRes.lista_exercicios.map(exe => {\n              var newExerc = Object.assign(exe, {\n                nm_repeticoes: exe.repetiçoes,\n                nm_series: exe.series\n              });\n              delete newExerc.repetiçoes;\n              delete newExerc.series;\n              return \"ok\";\n            });\n            resultList.push(planoRes);\n          }\n\n          if (resultList.length === 0) this.setState({\n            lista_plano_treino: [empty]\n          });else {\n            //console.log(resultList);\n            this.setState({\n              lista_plano_treino: resultList\n            });\n          }\n        });\n      } else {\n        alert(\"REQUEST ERROR \" + value.status);\n      }\n    }).catch(function (error) {\n      alert(\"Server is currently down... \\n\\n\".concat(\"Error details: \\n\\n\\t\").concat(error));\n    });\n  }\n\n  render() {\n    console.log(this.state.indice_plano);\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(IonHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(IonToolbar, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(IonTitle, {\n      id: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Plano Treino\"))), React.createElement(IonContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttonsWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftBut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, this.state.indice_plano - 1 >= 0 ? React.createElement(IonButton, {\n      className: \"buttonNextBefore\",\n      disabled: false,\n      onClick: () => this.planoanterior(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Anterior (\", this.state.lista_plano_treino[this.state.indice_plano - 1].nome, \")\") : React.createElement(IonButton, {\n      className: \"buttonNextBefore\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Anterior (x)\")), React.createElement(\"div\", {\n      className: \"rightBut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, this.state.indice_plano + 1 < this.state.lista_plano_treino.length ? React.createElement(IonButton, {\n      className: \"buttonNextBefore\",\n      disabled: false,\n      onClick: () => this.proximoplano(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Pr\\xF3ximo (\", this.state.lista_plano_treino[this.state.indice_plano + 1].nome, \")\") : React.createElement(IonButton, {\n      color: \"primary\",\n      className: \"buttonNextBefore\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\"))), React.createElement(IonCard, {\n      className: \"background-orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      className: \"margens-centrar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      className: \"nome-treino\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Plano de Treino:\"), \" \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, this.state.lista_plano_treino[this.state.indice_plano].nome), \" (At\\xE9 \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"...\"), \") \"))), React.createElement(\"div\", {\n      className: \"separador\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }), React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      className: \"background-orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: barbellOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Grupos Musculares:\"), \" \", this.state.lista_plano_treino[this.state.indice_plano].grupos_musculares))))), React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      className: \"background-orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: hourglassOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Frequ\\xEAncia:\"), \" \", this.state.lista_plano_treino[this.state.indice_plano].frequencia)))))), React.createElement(\"div\", {\n      className: \"separador\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }), React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"Lista de Exerc\\xEDcios:\"), \" \"))), this.state.lista_plano_treino[this.state.indice_plano].lista_exercicios.map((s, i) => React.createElement(IonCard, {\n      key: i,\n      className: \"card-exercicio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      className: \"nome-exercicio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, s.nome))), React.createElement(IonRow, {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: informationOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"N\\xFAmero de Repeti\\xE7\\xF5es: \", s.nm_repeticoes)))), React.createElement(IonRow, {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: informationOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"N\\xFAmero de S\\xE9ries: \", s.nm_series))))), React.createElement(\"img\", {\n      className: \"exeImage\",\n      alt: \"a carregar...\",\n      src: this.exercicioToImagem(s.nome),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }))))))), React.createElement(IonFooter, {\n      class: \"ion-no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(IonContent, {\n      className: \"info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \" \\xA9 UMFit - 2020\")));\n  }\n\n}\n\nexport default ShowPlanoTreino;","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/ShowPlanoTreino.tsx"],"names":["React","IonPage","IonHeader","IonToolbar","IonTitle","IonFooter","IonContent","IonCard","IonGrid","IonRow","IonLabel","IonCol","IonButton","IonItem","IonIcon","barbellOutline","hourglassOutline","informationOutline","getPlanosTreino","agachamento_frontal","require","agachamento_halter","agachamento_normal","cadeira_extensora","cadeira_adutora","afundos","pack_deck","peito_press_maquina","supino_normal_halters","tricep_corda","tricep_frances_barra","tricep_kickback","costa_maquina","costas_pushada","elevacoes","serrote_sentado","Supino_Normal_Halters","nome","nm_repeticoes","nm_series","Pack_Deck","Afundos","Peito_Press_Maquina","Tricep_Corda","Tricep_Frances_Barra","Tricep_KickBack_Corda","Agachamento_Frontal","Agachamento_Halter","Agachamento_Normal_Barra","Cadeira_Adutora","Cadeira_Extensora","Costas_Maquina","Elevacoes_Barra","Costas_Pushada","Serrote_Sentado","peito","tipo","grupos_musculares","frequencia","data_fim","lista_exercicios","empty","tricep","costas","pernas","ShowPlanoTreino","Component","constructor","props","state","planotreino","exercicio_atual","indice_plano","lista_plano_treino","user","planoanterior","index","setState","proximoplano","length","exercicioToImagem","componentDidMount","email","then","value","status","json","resultList","i","exerciciosList","exercicios","planoRes","Object","assign","grupo_muscular","map","exe","newExerc","repetiçoes","series","push","alert","catch","error","concat","render","console","log","s"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonFooter, IonContent, IonCard, IonGrid, IonRow, IonLabel, IonCol, IonButton, IonItem, IonIcon} from \"@ionic/react\";\nimport \"./css/ShowPlanoTreino.css\"\nimport { barbellOutline, hourglassOutline, informationOutline } from \"ionicons/icons\";\nimport { Exercicio, PlanoTreino } from \"../../models/Other/PlanoTreino\";\nimport { User } from \"../../models/Other/User\";\nimport { getPlanosTreino } from \"../../models/API/PlanoTreinoAPI\";\n\n//Pernas imgs\nvar agachamento_frontal = require(\"../../imgs/exercicios/Agachamento_Frontal.png\") \nvar agachamento_halter = require(\"../../imgs/exercicios/Agachamento_Halter.png\") \nvar agachamento_normal = require(\"../../imgs/exercicios/Agachamento_Normal_Barra.png\")\nvar cadeira_extensora = require(\"../../imgs/exercicios/Cadeira_Extensora.png\")\nvar cadeira_adutora = require(\"../../imgs/exercicios/Cadeira_Adutora.png\")\n\n//Peito imgs\nvar afundos = require(\"../../imgs/exercicios/Afundos.png\")\nvar pack_deck = require('../../imgs/exercicios/Pack_Deck.png')\nvar peito_press_maquina = require(\"../../imgs/exercicios/Peito_Press_Maquina.png\") \nvar supino_normal_halters = require(\"../../imgs/exercicios/Supino_Normal_Halters.png\") \n\n//Tricep imgs\nvar tricep_corda = require(\"../../imgs/exercicios/Tricep_Corda.png\")\nvar tricep_frances_barra = require(\"../../imgs/exercicios/Tricep_Frances_Barra.png\")\nvar tricep_kickback = require('../../imgs/exercicios/Tricep_KickBack_Corda.png')\n\n//Costas imgs\nvar costa_maquina = require(\"../../imgs/exercicios/Costas_Máquina.png\") \nvar costas_pushada = require(\"../../imgs/exercicios/Costas_Pushada.png\") \nvar elevacoes = require(\"../../imgs/exercicios/Elevações_Barra.png\")\nvar serrote_sentado = require(\"../../imgs/exercicios/Serrote_Sentado.png\")\n\n//Povoar o plano de treino com dados reais quando fizer a API ------------------------------------------------------------\n\nconst Supino_Normal_Halters: Exercicio = {\n\n    nome: \"Supino c/ Halters\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Pack_Deck: Exercicio = {\n\n    nome: \"Pack Deck\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Afundos: Exercicio = {\n\n    nome: \"Afundos\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Peito_Press_Maquina: Exercicio = {\n\n    nome: \"Máquina Press Peito\",\n    nm_repeticoes: \"15\",\n    nm_series: \"3\"\n}\n\nconst Tricep_Corda: Exercicio = {\n\n    nome: \"Tricep c/ Corda\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\n\nconst Tricep_Frances_Barra: Exercicio = {\n\n    nome: \"Tricep Francês c/ Barra\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Tricep_KickBack_Corda: Exercicio = {\n\n    nome: \"Tricep Kick-Back c/ Corda\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Agachamento_Frontal: Exercicio = {\n\n    nome: \"Agachamento Frontal\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Agachamento_Halter: Exercicio = {\n\n    nome: \"Agachamento c/ Halter\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Agachamento_Normal_Barra: Exercicio = {\n\n    nome: \"Agachamento Normal c/ Barra\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Cadeira_Adutora: Exercicio = {\n\n    nome: \"Cadeira Adutora\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Cadeira_Extensora: Exercicio = {\n\n    nome: \"Cadeira Extensora\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Costas_Maquina: Exercicio = {\n\n    nome: \"Máquina de Costas\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Elevacoes_Barra: Exercicio = {\n\n    nome: \"Elevações na Barra\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Costas_Pushada: Exercicio = {\n\n    nome: \"Pushada\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst Serrote_Sentado: Exercicio = {\n\n    nome: \"Serrote\",\n    nm_repeticoes: \"12\",\n    nm_series: \"4\"\n}\n\nconst peito: PlanoTreino = {\n\n    nome: \"Peito\",\n    tipo: \"Hipertrofia\",\n    grupos_musculares: \"Peito\",\n    frequencia: \"2/semana\",\n    data_fim: \"\",\n    lista_exercicios: [Supino_Normal_Halters, Pack_Deck, Afundos, Peito_Press_Maquina]\n}\n\nconst empty: PlanoTreino = {\n\n    nome: \"Não tem um plano ainda!\",\n    tipo: \"\",\n    grupos_musculares: \"\",\n    frequencia: \"\",\n    data_fim: \"\",\n    lista_exercicios: []\n}\n\nconst tricep: PlanoTreino = {\n\n    nome: \"Tricep\",\n    tipo: \"Hipertrofia\",\n    grupos_musculares: \"Tricep\",\n    frequencia: \"2/semana\",\n    data_fim: \"\",\n    lista_exercicios: [Tricep_Corda, Tricep_Frances_Barra, Tricep_KickBack_Corda, Afundos]\n}\n\nconst costas: PlanoTreino = {\n\n    nome: \"Costas\",\n    tipo: \"Hipertrofia\",\n    grupos_musculares: \"Costas\",\n    frequencia: \"2/semana\",\n    data_fim: \"\",\n    lista_exercicios: [Costas_Maquina, Costas_Pushada, Elevacoes_Barra, Serrote_Sentado]\n}\n\nconst pernas: PlanoTreino = {\n\n    nome: \"Pernas\",\n    tipo: \"Hipertrofia\",\n    grupos_musculares: \"Pernas\",\n    frequencia: \"2/semana\",\n    data_fim: \"\",\n    lista_exercicios: [Agachamento_Frontal, Agachamento_Halter, Agachamento_Normal_Barra,Cadeira_Adutora, Cadeira_Extensora]\n}\n\n\n\n//--------------------------------------------------------------------------------------------------------------------\n\nclass ShowPlanoTreino extends React.Component<any>{\n\n    state: {\n        \n        planotreino: PlanoTreino\n        exercicio_atual: Exercicio\n        indice_plano: number\n        lista_plano_treino: Array<PlanoTreino>\n        user: User\n    }\n\n    constructor(props: any) {\n\n        super(props);\n    \n        this.state = {\n\n            planotreino : {\n\n                nome: \"\",\n                tipo: \"\",\n                grupos_musculares: \"\",\n                frequencia: \"\",\n\n                data_fim: \"\",\n                lista_exercicios: []\n            },\n            exercicio_atual: {\n                nome: \"\",\n                nm_repeticoes: \"\",\n                nm_series: \"\"\n            },\n            indice_plano: 0,\n            lista_plano_treino: [peito,costas,pernas, tricep],\n\n            user: this.props.user\n\n        }        \n    }\n\n    planoanterior(){\n        \n        var index = this.state.indice_plano\n\n        if(index > 0){\n\n            index--;\n        }\n\n        this.setState({indice_plano: index})\n\n    }\n\n    proximoplano(){\n\n        var index = this.state.indice_plano\n\n        if(index < this.state.lista_plano_treino.length-1){\n\n            index++;\n        }\n\n        this.setState({indice_plano: index})    \n\n    }\n\n    exercicioToImagem(nome: any){\n\n        switch (nome) {\n\n            case \"Supino c/ Halters\": {return(supino_normal_halters)}\n            case \"Pack Deck\": {return(pack_deck)}\n            case \"Afundos\": {return(afundos)}\n            case \"Máquina Press Peito\": {return(peito_press_maquina)}\n            case \"Tricep c/ Corda\": {return(tricep_corda)}\n            case \"Tricep Francês c/ Barra\": {return(tricep_frances_barra)}\n            case \"Tricep Kick-Back c/ Corda\": {return(tricep_kickback)}\n            case \"Agachamento Frontal\": {return(agachamento_frontal)}\n            case \"Agachamento c/ Halter\": {return(agachamento_halter)}\n            case \"Agachamento Normal c/ Barra\": {return(agachamento_normal)}\n            case \"Cadeira Adutora\": {return(cadeira_adutora)}\n            case \"Cadeira Extensora\": {return(cadeira_extensora)}\n            case \"Máquina de Costas\": {return(costa_maquina)}\n            case \"Elevações na Barra\": {return(elevacoes)}\n            case \"Pushada\": {return(costas_pushada)}\n            case \"Serrote\": {return(serrote_sentado)}\n            default :\n            break;\n            \n        }\n    }\n\n    async componentDidMount(){\n\n\n        await getPlanosTreino(this.state.user.email).then(\n\n            async (value: any) =>{\n                if (value.status === 200) {\n\n                    var json = value.json();\n\n                    await json.then((value: any[]) => {\n\n                        var resultList: PlanoTreino[] = [];\n\n                        for (var i = 0; i < value.length; i++) {\n\n                            var exerciciosList = value[i].exercicios;\n\n                            var planoRes: any = Object.assign(value[i], {lista_exercicios: exerciciosList, grupos_musculares: value[i].grupo_muscular, tipo: \"esqueceram-se de mim\"});\n                            delete planoRes.exercicios;\n                            delete planoRes.grupo_muscular;\n                            \n                            planoRes.lista_exercicios.map((exe: any) => {\n                                \n                                var newExerc = Object.assign(exe, {nm_repeticoes: exe.repetiçoes, nm_series: exe.series});\n                                delete newExerc.repetiçoes;\n                                delete newExerc.series;\n                                return(\"ok\");\n                            });\n\n                            resultList.push(planoRes);\n                        }\n\n                        if(resultList.length === 0) \n                            this.setState({lista_plano_treino: [empty]});\n                        else {\n                        //console.log(resultList);\n                        this.setState({lista_plano_treino: resultList});\n\n                        }\n                    });\n\n                    } else {\n                    alert(\"REQUEST ERROR \"+value.status);\n                }\n            })\n            .catch(function(error: any) {\n              alert(\"Server is currently down... \\n\\n\".concat(\"Error details: \\n\\n\\t\").concat(error));\n            });\n    }\n\n    render(){\n\n        console.log(this.state.indice_plano)\n\n    return(\n      <IonPage>\n\n        <IonHeader>\n          <IonToolbar color=\"primary\">\n            <IonTitle id=\"page-title\">Plano Treino</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonContent>\n            \n            <IonGrid>\n\n                    <div className=\"buttonsWrapper\">\n                        <div className=\"leftBut\">\n                        {\n                            (this.state.indice_plano - 1 >= 0) ? (\n                                <IonButton className=\"buttonNextBefore\" disabled={false} onClick={() => this.planoanterior()}>\n                                    Anterior ({this.state.lista_plano_treino[this.state.indice_plano-1].nome})\n                                </IonButton>\n                            ):(\n                                <IonButton className=\"buttonNextBefore\" disabled>\n                                    Anterior (x)\n                                </IonButton>\n                            )\n                    \n                        }\n                        </div>\n                        <div className=\"rightBut\">\n                        {\n                            (this.state.indice_plano + 1 < this.state.lista_plano_treino.length) ? (\n                                <IonButton className=\"buttonNextBefore\" disabled={false} onClick={() => this.proximoplano()}>\n                                    Próximo ({this.state.lista_plano_treino[this.state.indice_plano+1].nome})\n                                </IonButton>\n                            ):(\n                                <IonButton color=\"primary\" className=\"buttonNextBefore\"  disabled>\n                                    Próximo\n                                </IonButton>\n                            )\n                        }\n                        </div>\n                    </div>\n\n                <IonCard  className=\"background-orange\">\n\n                    <IonRow>\n                        <IonCol className=\"margens-centrar\">\n                    <IonLabel className=\"nome-treino\"> <b>Plano de Treino:</b> <i>{this.state.lista_plano_treino[this.state.indice_plano].nome}</i> (Até <i>...</i>) </IonLabel>\n                        </IonCol>\n                    </IonRow>\n                    \n                    <div className=\"separador\"></div>\n\n                    <IonRow>\n                        {/*\n                        <IonCol>\n                        <div className=\"margens-nomes\">\n                        <IonItem className=\"background-orange\"><IonIcon icon={caretForwardOutline}></IonIcon><b>&nbsp;</b>\n                        <IonLabel className=\"text-title\"><b>Tipo:</b> {this.state.lista_plano_treino[this.state.indice_plano].tipo}</IonLabel>\n                        \n                        </IonItem>\n                        </div>\n                        </IonCol>\n                        */}\n                        <IonCol>\n                        <div className=\"margens-nomes\">\n                        <IonItem className=\"background-orange\"><IonIcon icon={barbellOutline}></IonIcon><b>&nbsp;</b>\n                        <IonLabel className=\"text-title\"><div className=\"responsiveText\"><b>Grupos Musculares:</b> {this.state.lista_plano_treino[this.state.indice_plano].grupos_musculares}</div></IonLabel>\n                        \n                        </IonItem>\n                        </div>\n                        </IonCol>\n\n                        <IonCol>\n                        <div className=\"margens-nomes\">\n                        <IonItem className=\"background-orange\"><IonIcon icon={hourglassOutline}></IonIcon><b>&nbsp;</b>\n                        <IonLabel className=\"text-title\"><div className=\"responsiveText\"><b>Frequência:</b> {this.state.lista_plano_treino[this.state.indice_plano].frequencia}</div></IonLabel>\n                        \n                        </IonItem>\n                        </div>\n                        </IonCol>\n                    </IonRow>\n\n                    <div className=\"separador\"></div>\n\n                    <IonRow>\n                        <div className=\"margens-nomes\">\n                        <IonLabel className=\"text-title\"><div className=\"responsiveText\">Lista de Exercícios:</div> </IonLabel>\n                        </div>\n                    </IonRow>       \n\n                    {\n                        this.state.lista_plano_treino[this.state.indice_plano].lista_exercicios.map((s, i) => (\n                <IonCard key={i} className=\"card-exercicio\">\n\n                    <IonRow>\n                    \n                        <IonCol>  \n\n                            <IonRow className=\"margens-nomes\"> \n                                <IonLabel className=\"nome-exercicio\"><div className=\"responsiveText\">{s.nome}</div></IonLabel>\n                            </IonRow> \n                            \n                            <IonRow className=\"margens-nomes\"> \n                                <IonItem><IonIcon icon={informationOutline}></IonIcon><b>&nbsp;</b>\n                                <IonLabel className=\"text-title\"><div className=\"responsiveText\">Número de Repetições: {s.nm_repeticoes}</div></IonLabel>                        \n                                </IonItem>\n                            </IonRow>  \n\n                            <IonRow className=\"margens-nomes\"> \n                            <IonItem><IonIcon icon={informationOutline}></IonIcon><b>&nbsp;</b>\n                                <IonLabel className=\"text-title\"><div className=\"responsiveText\">Número de Séries: {s.nm_series}</div></IonLabel>                        \n                                </IonItem>\n                            </IonRow> \n\n                        </IonCol>\n\n                            <img className=\"exeImage\" alt=\"a carregar...\" src={this.exercicioToImagem(s.nome)}></img>\n\n\n                    </IonRow>\n\n                </IonCard>\n            ))}\n\n                </IonCard>\n            </IonGrid>\n\n        </IonContent>\n \n        <IonFooter class=\"ion-no-border\">\n            <IonContent className=\"info-text\"> © UMFit - 2020</IonContent>\n        </IonFooter>\n\n      </IonPage>\n    );\n    }\n    \n}\n\nexport default ShowPlanoTreino;\n\n"]},"metadata":{},"sourceType":"module"}