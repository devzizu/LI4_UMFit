{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/EvolucaoPage/Evolucao.tsx\";\nimport React from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardHeader, IonCardTitle, IonGrid, IonRow, IonCol, IonList, IonItem, IonSelect, IonSelectOption } from \"@ionic/react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../css/Evolucao.css\"; //----------------------------------------------------------------------\n\nvar generalGraphSettings = {\n  labels: [],\n  datasets: [{\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: []\n  }]\n}; //----------------------------------------------------------------------\n\n//----------------------------------------------------------------------\nclass EvolucaoSAVE extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.state = {\n      peso: new Array(),\n      imc: new Array(),\n      mGorda: new Array(),\n      mMagra: new Array(),\n      idadeMeta: new Array(),\n      menuOpt: \"compoCorporalOption\" //default option\n\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      peso: [{\n        data: new Date(2020, 0, 21),\n        y: 98\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 95\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 93\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 88\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 82\n      }],\n      imc: [{\n        data: new Date(2020, 0, 21),\n        y: 8\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 5\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 3\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 2.3\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 2.1\n      }],\n      mGorda: [{\n        data: new Date(2020, 0, 21),\n        y: 50\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 47\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 42\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 38\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 27\n      }],\n      mMagra: [{\n        data: new Date(2020, 0, 21),\n        y: 23\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 25\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 33\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 36\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 39\n      }],\n      idadeMeta: [{\n        data: new Date(2020, 0, 21),\n        y: 269\n      }, {\n        data: new Date(2020, 3, 2),\n        y: 112\n      }, {\n        data: new Date(2020, 5, 23),\n        y: 82\n      }, {\n        data: new Date(2020, 7, 12),\n        y: 69\n      }, {\n        data: new Date(2020, 10, 18),\n        y: 12\n      }]\n    });\n  }\n\n  render() {\n    //----------------------------------------------------------------------\n    //----------------------------------------------------------------------\n    //Definição para todos os gráficos\n    const noLegend = {\n      legend: {\n        display: false\n      }\n    }; //----------------------------------------------------------------------\n    //Def. indiviual dos dados de cada gráfico\n    //----------------------------------------------------------------------\n    //----------------------------------------------------------------------\n    //Compos. corporal => Graph. Peso (kg) \n\n    var xPeso = [],\n        yPeso = [];\n    const peso = this.state.peso;\n    this.state.peso.forEach(ref => {\n      xPeso.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yPeso.push(ref.y);\n    });\n    var dataPeso = generalGraphSettings;\n    dataPeso.labels = xPeso;\n    dataPeso.datasets[0].data = yPeso; //----------------------------------------------------------------------\n    //Compos. corporal => Graph. Massa Gorda (kg)\n\n    var xMGorda = [],\n        yMGorda = [];\n    const mgorda = this.state.mGorda;\n    mgorda.forEach(ref => {\n      xMGorda.push(\"\" + (ref.data.getMonth() + 1) + \"/\" + ref.data.getDay());\n      yMGorda.push(ref.y);\n    });\n    const dataMGorda = {\n      labels: xPeso,\n      datasets: [{\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: yMGorda\n      }]\n    };\n    var menuOp = this.state.menuOpt;\n\n    if (this.state.menuOpt !== menuOp) {\n      this.setState({\n        menuOpt: menuOp\n      });\n    }\n\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(IonHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(IonToolbar, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(IonTitle, {\n      id: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Evolu\\xE7\\xE3o\"))), React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      className: \"SelectionMenuItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(IonSelect, {\n      value: this.state.menuOpt,\n      placeholder: \"Select One\",\n      onIonChange: e => this.setState({\n        menuOpt: e.detail.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(IonSelectOption, {\n      value: \"compoCorporalOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SMlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Composi\\xE7\\xE3o corporal\")), React.createElement(IonSelectOption, {\n      value: \"perimCorporalOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SMlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Per\\xEDmetros corporais\"))))), React.createElement(IonContent, {\n      className: \"ionContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      class: \"ion-justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, (() => {\n      //Apresentar diferentes menus mediante a seleção\n      switch (this.state.menuOpt) {\n        //Caso a seleção de gráficos seja composição corporal\n        case \"compoCorporalOption\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, \"Peso\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataPeso,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, \"Massa Gorda (Kg)\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataMGorda,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }, \"Massa Gorda (Kg)\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataMGorda,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, \"Massa Gorda (Kg)\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataMGorda,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }, \"Massa Gorda (Kg)\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataMGorda,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          }))));\n        //Caso a seleção de gráficos seja composição corporal\n\n        case \"perimCorporalOption\":\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308\n            },\n            __self: this\n          }, React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, \"Bra\\xE7o direito\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataPeso,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }))), React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329\n            },\n            __self: this\n          }, React.createElement(IonCard, {\n            className: \"titleCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331\n            },\n            __self: this\n          }, React.createElement(IonCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333\n            },\n            __self: this\n          }, React.createElement(IonCardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"textWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334\n            },\n            __self: this\n          }, \"Bra\\xE7o Esquerdo\")))), React.createElement(\"div\", {\n            className: \"evoStats\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          }, React.createElement(Line, {\n            ref: \"lineChart\",\n            data: dataMGorda,\n            options: noLegend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340\n            },\n            __self: this\n          }))));\n\n        default:\n          return React.createElement(IonCol, {\n            sizeXs: \"12\",\n            \"size-Sm\": \"12\",\n            sizeMd: \"6\",\n            sizeLg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351\n            },\n            __self: this\n          });\n      } //close switch\n\n    } //close anonymouse function\n    )()))));\n  }\n\n}\n\nexport default EvolucaoSAVE;","map":{"version":3,"sources":["/home/joao/Desktop/Projeto-LI4/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/EvolucaoPage/Evolucao.tsx"],"names":["React","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","IonCard","IonCardHeader","IonCardTitle","IonGrid","IonRow","IonCol","IonList","IonItem","IonSelect","IonSelectOption","Line","generalGraphSettings","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","EvolucaoSAVE","Component","constructor","props","state","peso","Array","imc","mGorda","mMagra","idadeMeta","menuOpt","componentDidMount","setState","Date","y","render","noLegend","legend","display","xPeso","yPeso","forEach","ref","push","getMonth","getDay","dataPeso","xMGorda","yMGorda","mgorda","dataMGorda","menuOp","e","detail","value"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardHeader, IonCardTitle,  IonGrid, IonRow, IonCol, IonList, IonItem, IonSelect, IonSelectOption } from \"@ionic/react\";\nimport{Line} from \"react-chartjs-2\";\n\nimport \"../css/Evolucao.css\";\n\n//----------------------------------------------------------------------\n\nvar generalGraphSettings = { \n    labels: [],\n    datasets: [{ \n        fill: false, lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)', borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)', pointBackgroundColor: '#fff',\n        pointBorderWidth: 1, pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)', pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2, pointRadius: 1, pointHitRadius: 10, \n        data: [] \n    }]\n};\n\n//----------------------------------------------------------------------\n\ninterface registoAvaliacao {\n    data: Date,\n    y: number\n}\n\n//----------------------------------------------------------------------\n\nclass EvolucaoSAVE extends React.Component {\n\n    state: {\n        peso: Array<registoAvaliacao>\n        imc: Array<registoAvaliacao>\n        mGorda: Array<registoAvaliacao>\n        mMagra: Array<registoAvaliacao>\n        idadeMeta: Array<registoAvaliacao>\n        menuOpt:String\n    }\n\n    constructor(props: any) {\n\n        super(props);   \n            \n        this.state = ({\n\n            peso: new Array<registoAvaliacao>(),\n            imc: new Array<registoAvaliacao>(),\n            mGorda: new Array<registoAvaliacao>(),\n            mMagra: new Array<registoAvaliacao>(),\n            idadeMeta: new Array<registoAvaliacao>(),\n            menuOpt: \"compoCorporalOption\" //default option\n\n        });\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            peso: [\n                {data: new Date(2020, 0, 21), y: 98},\n                {data: new Date(2020, 3, 2), y: 95},\n                {data: new Date(2020, 5, 23), y: 93},\n                {data: new Date(2020, 7, 12), y: 88},\n                {data: new Date(2020, 10, 18), y: 82}\n            ],\n            imc: [\n                {data: new Date(2020, 0, 21), y: 8},\n                {data: new Date(2020, 3, 2), y: 5},\n                {data: new Date(2020, 5, 23), y: 3},\n                {data: new Date(2020, 7, 12), y: 2.3},\n                {data: new Date(2020, 10, 18), y: 2.1}\n            ],\n            mGorda: [\n                {data: new Date(2020, 0, 21), y: 50},\n                {data: new Date(2020, 3, 2), y: 47},\n                {data: new Date(2020, 5, 23), y: 42},\n                {data: new Date(2020, 7, 12), y: 38},\n                {data: new Date(2020, 10, 18), y: 27}\n            ],\n            mMagra: [\n                {data: new Date(2020, 0, 21), y: 23},\n                {data: new Date(2020, 3, 2), y: 25},\n                {data: new Date(2020, 5, 23), y: 33},\n                {data: new Date(2020, 7, 12), y: 36},\n                {data: new Date(2020, 10, 18), y: 39}\n            ],\n            idadeMeta: [\n                {data: new Date(2020, 0, 21), y: 269},\n                {data: new Date(2020, 3, 2), y: 112},\n                {data: new Date(2020, 5, 23), y: 82},\n                {data: new Date(2020, 7, 12), y: 69},\n                {data: new Date(2020, 10, 18), y: 12}\n            ]\n        });\n    }\n\n    render() {\n        \n        //----------------------------------------------------------------------\n\n\n        //----------------------------------------------------------------------\n        //Definição para todos os gráficos\n\n        const noLegend={ legend: { display: false } }; \n\n        //----------------------------------------------------------------------\n        //Def. indiviual dos dados de cada gráfico\n        //----------------------------------------------------------------------\n\n        //----------------------------------------------------------------------\n        //Compos. corporal => Graph. Peso (kg) \n        var xPeso: any[] = [], yPeso: number[] = [];\n        const peso = this.state.peso;\n        this.state.peso.forEach((ref)=>{\n            xPeso.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());\n            yPeso.push(ref.y);\n        });\n        var dataPeso: any = generalGraphSettings;\n        dataPeso.labels = xPeso;\n        dataPeso.datasets[0].data = yPeso;\n\n        //----------------------------------------------------------------------\n        //Compos. corporal => Graph. Massa Gorda (kg)\n\n        var xMGorda : any[] = [], yMGorda: number[] = [];\n        const mgorda = this.state.mGorda;\n        mgorda.forEach((ref)=>{xMGorda.push(\"\"+(ref.data.getMonth()+1)+\"/\"+ref.data.getDay());yMGorda.push(ref.y);}); \n        const dataMGorda = { \n            labels: xPeso,\n            datasets: [{ \n                fill: false, lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)', borderColor: 'rgba(75,192,192,1)',\n                borderCapStyle: 'butt', borderDash: [], borderDashOffset: 0.0, borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)', pointBackgroundColor: '#fff',\n                pointBorderWidth: 1, pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)', pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2, pointRadius: 1, pointHitRadius: 10, \n                data: yMGorda \n            }]};\n\n        var menuOp = this.state.menuOpt;\n        \n        if(this.state.menuOpt !== menuOp) {\n\n            this.setState( { menuOpt: menuOp } )\n        } \n\n\n        return(\n\n            <IonPage>\n            \n                {/* Page title */}\n\n                <IonHeader>\n                    <IonToolbar color=\"primary\">\n                        <IonTitle id=\"page-title\">Evolução</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n            \n                {/* Menu superior para escolha de grupo de gráficos */}\n            \n                <IonList>\n                    \n                    {/*\n                    <IonListHeader>\n                        <IonLabel></IonLabel>\n                    </IonListHeader>\n                    */}\n\n                    <IonItem className=\"SelectionMenuItem\">\n    \n                            <IonSelect value={this.state.menuOpt} placeholder=\"Select One\" onIonChange={\n                                e =>this.setState( {menuOpt:e.detail.value})\n                            }>\n\n                                <IonSelectOption value=\"compoCorporalOption\"><div className=\"SMlabel\">Composição corporal</div></IonSelectOption>\n                                <IonSelectOption value=\"perimCorporalOption\"><div className=\"SMlabel\">Perímetros corporais</div></IonSelectOption>\n\n                            </IonSelect>\n                    </IonItem>\n\n                </IonList>\n\n                {/* Gráficos disponiveis */}\n\n                <IonContent className=\"ionContent\">\n                \n                <IonGrid className=\"grid\">\n\n                    <IonRow class=\"ion-justify-content-center\">\n                    \n                        {( () => {\n                            \n                            //Apresentar diferentes menus mediante a seleção\n                            switch(this.state.menuOpt) {\n                                \n                                //Caso a seleção de gráficos seja composição corporal\n                                case \"compoCorporalOption\": \n                                \n                                    return(\n\n                                        <React.Fragment>\n                                            \n                                            {/* Gráfico de Evolução do Peso */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Peso</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                                <div className=\"evoStats\">\n                                                    <Line ref=\"lineChart\" data={dataPeso} options={noLegend} />\n                                                </div>\n\n                                            </IonCol>\n                                            \n                                            {/* Gráfico de Evolução de Massa Gorda (Kg) */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Massa Gorda (Kg)</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                            <div className=\"evoStats\">\n                                                <Line ref=\"lineChart\" data={dataMGorda} options={noLegend} />\n                                            </div>\n\n                                            </IonCol>\n\n                                            {/* Gráfico de Evolução de Massa Magra (Kg) */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Massa Gorda (Kg)</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                            <div className=\"evoStats\">\n                                                <Line ref=\"lineChart\" data={dataMGorda} options={noLegend} />\n                                            </div>\n\n                                            </IonCol>\n\n                                            {/* Gráfico de Evolução de IMC */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Massa Gorda (Kg)</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                            <div className=\"evoStats\">\n                                                <Line ref=\"lineChart\" data={dataMGorda} options={noLegend} />\n                                            </div>\n\n                                            </IonCol>\n\n                                            {/* Gráfico de Evolução de Massa Gorda (Kg) */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Massa Gorda (Kg)</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                            <div className=\"evoStats\">\n                                                <Line ref=\"lineChart\" data={dataMGorda} options={noLegend} />\n                                            </div>\n\n                                            </IonCol>\n\n                                        </React.Fragment>\n                                    );\n\n                                //Caso a seleção de gráficos seja composição corporal\n                                case \"perimCorporalOption\": \n                                \n                                    return(\n\n                                        <React.Fragment>\n                                            \n                                            {/* Gráfico de Evolução do Peso */}\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Braço direito</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                                <div className=\"evoStats\">\n                                                    <Line ref=\"lineChart\" data={dataPeso} options={noLegend} />\n                                                </div>\n\n                                            </IonCol>\n                                            \n                                            {/* Gráfico de Evolução de Massa Gorda (Kg) */}\n\n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n\n                                                <IonCard className=\"titleCard\">\n\n                                                    <IonCardHeader>\n                                                        <IonCardTitle><div className=\"textWrapper\">Braço Esquerdo</div></IonCardTitle>\n                                                    </IonCardHeader>\n\n                                                </IonCard>\n\n                                            <div className=\"evoStats\">\n                                                <Line ref=\"lineChart\" data={dataMGorda} options={noLegend} />\n                                            </div>\n\n                                            </IonCol>\n\n                                        </React.Fragment>\n                                    );\n\n                                    default:\n                                        \n                                        return( \n                                            <IonCol sizeXs=\"12\" size-Sm =\"12\" sizeMd=\"6\" sizeLg=\"6\">\n                                            {/* Empty option */}\n                                            </IonCol>\n                                        );\n\n                            } //close switch\n\n                        } //close anonymouse function\n                    ) ()}\n\n                    </IonRow>\n\n                </IonGrid>\n\n            </IonContent>\n\n\n        </IonPage>\n        );\n    }\n\n}\n\nexport default EvolucaoSAVE;"]},"metadata":{},"sourceType":"module"}