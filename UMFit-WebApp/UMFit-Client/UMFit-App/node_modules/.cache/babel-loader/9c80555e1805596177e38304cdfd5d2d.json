{"ast":null,"code":"var _jsxFileName = \"/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/ShowPlanoTreino.tsx\";\nimport { IonButton, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonItem, IonLabel, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport { barbellOutline, hourglassOutline, informationOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { getPlanosTreino } from \"../../models/API/PlanoTreinoAPI\";\nimport \"./css/ShowPlanoTreino.css\";\n\nvar exercicio_default = require(\"../../imgs/exercicios/exercicio_default.png\"); //Pernas imgs\n\n\nvar agachamento_frontal = require(\"../../imgs/exercicios/Agachamento_Frontal.png\");\n\nvar agachamento_halter = require(\"../../imgs/exercicios/Agachamento_Halter.png\");\n\nvar agachamento_normal = require(\"../../imgs/exercicios/Agachamento_Normal_Barra.png\");\n\nvar cadeira_extensora = require(\"../../imgs/exercicios/Cadeira_Extensora.png\");\n\nvar cadeira_adutora = require(\"../../imgs/exercicios/Cadeira_Adutora.png\"); //Peito imgs\n\n\nvar afundos = require(\"../../imgs/exercicios/Afundos.png\");\n\nvar pack_deck = require('../../imgs/exercicios/Pack_Deck.png');\n\nvar peito_press_maquina = require(\"../../imgs/exercicios/Peito_Press_Maquina.png\");\n\nvar supino_normal_halters = require(\"../../imgs/exercicios/Supino_Normal_Halters.png\"); //Tricep imgs\n\n\nvar tricep_corda = require(\"../../imgs/exercicios/Tricep_Corda.png\");\n\nvar tricep_frances_barra = require(\"../../imgs/exercicios/Tricep_Frances_Barra.png\");\n\nvar tricep_kickback = require('../../imgs/exercicios/Tricep_KickBack_Corda.png'); //Costas imgs\n\n\nvar costa_maquina = require(\"../../imgs/exercicios/Costas_Máquina.png\");\n\nvar costas_pushada = require(\"../../imgs/exercicios/Costas_Pushada.png\");\n\nvar elevacoes = require(\"../../imgs/exercicios/Elevações_Barra.png\");\n\nvar serrote_sentado = require(\"../../imgs/exercicios/Serrote_Sentado.png\"); //Povoar o plano de treino com dados reais quando fizer a API ------------------------------------------------------------\n\n\nconst empty = {\n  nome: \"Não tem um plano ainda!\",\n  tipo: \"\",\n  grupos_musculares: \"\",\n  frequencia: \"\",\n  data_fim: \"\",\n  lista_exercicios: []\n}; //--------------------------------------------------------------------------------------------------------------------\n\nclass ShowPlanoTreino extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.state = {\n      planotreino: {\n        nome: \"\",\n        tipo: \"\",\n        grupos_musculares: \"\",\n        frequencia: \"\",\n        data_fim: \"\",\n        lista_exercicios: []\n      },\n      exercicio_atual: {\n        nome: \"\",\n        nm_repeticoes: \"\",\n        nm_series: \"\"\n      },\n      indice_plano: 0,\n      lista_plano_treino: [empty],\n      user: this.props.user\n    };\n  }\n\n  planoanterior() {\n    var index = this.state.indice_plano;\n\n    if (index > 0) {\n      index--;\n    }\n\n    this.setState({\n      indice_plano: index\n    });\n  }\n\n  proximoplano() {\n    var index = this.state.indice_plano;\n\n    if (index < this.state.lista_plano_treino.length - 1) {\n      index++;\n    }\n\n    this.setState({\n      indice_plano: index\n    });\n  }\n\n  exercicioToImagem(nome) {\n    switch (nome) {\n      case \"Supino c/ Halters\":\n        {\n          return supino_normal_halters;\n        }\n\n      case \"Pack Deck\":\n        {\n          return pack_deck;\n        }\n\n      case \"Afundos\":\n        {\n          return afundos;\n        }\n\n      case \"Máquina Press Peito\":\n        {\n          return peito_press_maquina;\n        }\n\n      case \"Tricep c/ Corda\":\n        {\n          return tricep_corda;\n        }\n\n      case \"Tricep Francês c/ Barra\":\n        {\n          return tricep_frances_barra;\n        }\n\n      case \"Tricep Kick-Back c/ Corda\":\n        {\n          return tricep_kickback;\n        }\n\n      case \"Agachamento Frontal\":\n        {\n          return agachamento_frontal;\n        }\n\n      case \"Agachamento c/ Halter\":\n        {\n          return agachamento_halter;\n        }\n\n      case \"Agachamento Normal c/ Barra\":\n        {\n          return agachamento_normal;\n        }\n\n      case \"Cadeira Adutora\":\n        {\n          return cadeira_adutora;\n        }\n\n      case \"Cadeira Extensora\":\n        {\n          return cadeira_extensora;\n        }\n\n      case \"Máquina de Costas\":\n        {\n          return costa_maquina;\n        }\n\n      case \"Elevações\":\n        {\n          return elevacoes;\n        }\n\n      case \"Puxada\":\n        {\n          return costas_pushada;\n        }\n\n      case \"Serrote\":\n        {\n          return serrote_sentado;\n        }\n\n      default:\n        {\n          return exercicio_default;\n        }\n    }\n  }\n\n  async componentDidMount() {\n    await getPlanosTreino(this.state.user.email).then(async value => {\n      if (value.status === 200) {\n        var json = value.json();\n        await json.then(value => {\n          var resultList = [];\n\n          for (var i = 0; i < value.length; i++) {\n            if (value[i] === null) return;\n            var exerciciosList = value[i].exercicios;\n            var planoRes = Object.assign(value[i], {\n              lista_exercicios: exerciciosList,\n              grupos_musculares: value[i].grupo_muscular,\n              tipo: \"esqueceram-se de mim\"\n            });\n            delete planoRes.exercicios;\n            delete planoRes.grupo_muscular;\n            planoRes.lista_exercicios.map(exe => {\n              var newExerc = Object.assign(exe, {\n                nm_repeticoes: exe.repetiçoes,\n                nm_series: exe.series\n              });\n              delete newExerc.repetiçoes;\n              delete newExerc.series;\n              return \"ok\";\n            });\n            resultList.push(planoRes);\n          }\n\n          console.log(resultList);\n          if (resultList.length === 0) this.setState({\n            lista_plano_treino: [empty]\n          });else {\n            //console.log(resultList);\n            this.setState({\n              lista_plano_treino: resultList\n            });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.indice_plano);\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(IonHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(IonToolbar, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(IonTitle, {\n      id: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Plano Treino\"))), React.createElement(IonContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttonsWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftBut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.indice_plano - 1 >= 0 ? React.createElement(IonButton, {\n      className: \"buttonNextBefore\",\n      disabled: false,\n      onClick: () => this.planoanterior(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Anterior (\", this.state.lista_plano_treino[this.state.indice_plano - 1].nome, \")\") : React.createElement(IonButton, {\n      className: \"buttonNextBefore\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Anterior\")), React.createElement(\"div\", {\n      className: \"rightBut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.state.indice_plano + 1 < this.state.lista_plano_treino.length ? React.createElement(IonButton, {\n      className: \"buttonNextBefore\",\n      disabled: false,\n      onClick: () => this.proximoplano(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Pr\\xF3ximo (\", this.state.lista_plano_treino[this.state.indice_plano + 1].nome, \")\") : React.createElement(IonButton, {\n      className: \"buttonNextBefore\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\"))), React.createElement(IonCard, {\n      className: \"background-orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      className: \"margens-centrar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      className: \"nome-treino\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Plano de Treino:\"), \" \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, this.state.lista_plano_treino[this.state.indice_plano].nome), \" (At\\xE9 \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"...\"), \") \"))), React.createElement(\"div\", {\n      className: \"separador\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      className: \"background-orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: barbellOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Grupos Musculares:\"), \" \", this.state.lista_plano_treino[this.state.indice_plano].grupos_musculares))))), React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      className: \"background-orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: hourglassOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Frequ\\xEAncia:\"), \" \", this.state.lista_plano_treino[this.state.indice_plano].frequencia)))))), React.createElement(\"div\", {\n      className: \"separador\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Lista de Exerc\\xEDcios:\"), \" \"))), this.state.lista_plano_treino[this.state.indice_plano].lista_exercicios.map((s, i) => React.createElement(IonCard, {\n      key: i,\n      className: \"card-exercicio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      className: \"nome-exercicio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, s.nome))), React.createElement(IonRow, {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: informationOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"N\\xFAmero de Repeti\\xE7\\xF5es: \", s.nm_repeticoes)))), React.createElement(IonRow, {\n      className: \"margens-nomes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      icon: informationOutline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(IonLabel, {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"responsiveText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"N\\xFAmero de S\\xE9ries: \", s.nm_series))))), React.createElement(\"img\", {\n      className: \"exeImage\",\n      alt: \"a carregar...\",\n      src: this.exercicioToImagem(s.nome),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default ShowPlanoTreino;","map":{"version":3,"sources":["/home/hc/Desktop/li4_umfit/UMFit-WebApp/UMFit-Client/UMFit-App/src/pages/user/ShowPlanoTreino.tsx"],"names":["IonButton","IonCard","IonCol","IonContent","IonGrid","IonHeader","IonIcon","IonItem","IonLabel","IonPage","IonRow","IonTitle","IonToolbar","barbellOutline","hourglassOutline","informationOutline","React","getPlanosTreino","exercicio_default","require","agachamento_frontal","agachamento_halter","agachamento_normal","cadeira_extensora","cadeira_adutora","afundos","pack_deck","peito_press_maquina","supino_normal_halters","tricep_corda","tricep_frances_barra","tricep_kickback","costa_maquina","costas_pushada","elevacoes","serrote_sentado","empty","nome","tipo","grupos_musculares","frequencia","data_fim","lista_exercicios","ShowPlanoTreino","Component","constructor","props","state","planotreino","exercicio_atual","nm_repeticoes","nm_series","indice_plano","lista_plano_treino","user","planoanterior","index","setState","proximoplano","length","exercicioToImagem","componentDidMount","email","then","value","status","json","resultList","i","exerciciosList","exercicios","planoRes","Object","assign","grupo_muscular","map","exe","newExerc","repetiçoes","series","push","console","log","render","s"],"mappings":"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","sourcesContent":["\nimport { IonButton, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonItem, IonLabel, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\nimport { barbellOutline, hourglassOutline, informationOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { getPlanosTreino } from \"../../models/API/PlanoTreinoAPI\";\nimport { Exercicio, PlanoTreino } from \"../../models/Other/PlanoTreino\";\nimport { User } from \"../../models/Other/User\";\nimport \"./css/ShowPlanoTreino.css\";\nvar exercicio_default = require(\"../../imgs/exercicios/exercicio_default.png\") \n//Pernas imgs\nvar agachamento_frontal = require(\"../../imgs/exercicios/Agachamento_Frontal.png\") \nvar agachamento_halter = require(\"../../imgs/exercicios/Agachamento_Halter.png\") \nvar agachamento_normal = require(\"../../imgs/exercicios/Agachamento_Normal_Barra.png\")\nvar cadeira_extensora = require(\"../../imgs/exercicios/Cadeira_Extensora.png\")\nvar cadeira_adutora = require(\"../../imgs/exercicios/Cadeira_Adutora.png\")\n\n//Peito imgs\nvar afundos = require(\"../../imgs/exercicios/Afundos.png\")\nvar pack_deck = require('../../imgs/exercicios/Pack_Deck.png')\nvar peito_press_maquina = require(\"../../imgs/exercicios/Peito_Press_Maquina.png\") \nvar supino_normal_halters = require(\"../../imgs/exercicios/Supino_Normal_Halters.png\") \n\n//Tricep imgs\nvar tricep_corda = require(\"../../imgs/exercicios/Tricep_Corda.png\")\nvar tricep_frances_barra = require(\"../../imgs/exercicios/Tricep_Frances_Barra.png\")\nvar tricep_kickback = require('../../imgs/exercicios/Tricep_KickBack_Corda.png')\n\n//Costas imgs\nvar costa_maquina = require(\"../../imgs/exercicios/Costas_Máquina.png\") \nvar costas_pushada = require(\"../../imgs/exercicios/Costas_Pushada.png\") \nvar elevacoes = require(\"../../imgs/exercicios/Elevações_Barra.png\")\nvar serrote_sentado = require(\"../../imgs/exercicios/Serrote_Sentado.png\")\n\n//Povoar o plano de treino com dados reais quando fizer a API ------------------------------------------------------------\n\n\n\nconst empty: PlanoTreino = {\n\n    nome: \"Não tem um plano ainda!\",\n    tipo: \"\",\n    grupos_musculares: \"\",\n    frequencia: \"\",\n    data_fim: \"\",\n    lista_exercicios: []\n}\n//--------------------------------------------------------------------------------------------------------------------\n\nclass ShowPlanoTreino extends React.Component<any>{\n\n    state: {\n        \n        planotreino: PlanoTreino\n        exercicio_atual: Exercicio\n        indice_plano: number\n        lista_plano_treino: Array<PlanoTreino>\n        user: User\n    }\n\n    constructor(props: any) {\n\n        super(props);\n    \n        this.state = {\n\n            planotreino : {\n\n                nome: \"\",\n                tipo: \"\",\n                grupos_musculares: \"\",\n                frequencia: \"\",\n\n                data_fim: \"\",\n                lista_exercicios: []\n            },\n            exercicio_atual: {\n                nome: \"\",\n                nm_repeticoes: \"\",\n                nm_series: \"\"\n            },\n            indice_plano: 0,\n            lista_plano_treino: [empty],\n\n            user: this.props.user\n\n        }        \n    }\n\n    planoanterior(){\n        \n        var index = this.state.indice_plano\n\n        if(index > 0){\n\n            index--;\n        }\n\n        this.setState({indice_plano: index})\n\n    }\n\n    proximoplano(){\n\n        var index = this.state.indice_plano\n\n        if(index < this.state.lista_plano_treino.length-1){\n\n            index++;\n        }\n\n        this.setState({indice_plano: index})    \n\n    }\n\n    exercicioToImagem(nome: any){\n\n        switch (nome) {\n\n            case \"Supino c/ Halters\": {return(supino_normal_halters)}\n            case \"Pack Deck\": {return(pack_deck)}\n            case \"Afundos\": {return(afundos)}\n            case \"Máquina Press Peito\": {return(peito_press_maquina)}\n            case \"Tricep c/ Corda\": {return(tricep_corda)}\n            case \"Tricep Francês c/ Barra\": {return(tricep_frances_barra)}\n            case \"Tricep Kick-Back c/ Corda\": {return(tricep_kickback)}\n            case \"Agachamento Frontal\": {return(agachamento_frontal)}\n            case \"Agachamento c/ Halter\": {return(agachamento_halter)}\n            case \"Agachamento Normal c/ Barra\": {return(agachamento_normal)}\n            case \"Cadeira Adutora\": {return(cadeira_adutora)}\n            case \"Cadeira Extensora\": {return(cadeira_extensora)}\n            case \"Máquina de Costas\": {return(costa_maquina)}\n            case \"Elevações\": {return(elevacoes)}\n            case \"Puxada\": {return(costas_pushada)}\n            case \"Serrote\": {return(serrote_sentado)}\n            default :  {return(exercicio_default)}\n            \n        }\n    }\n\n    async componentDidMount(){\n        await getPlanosTreino(this.state.user.email).then(\n           \n\n            async (value: any) =>{\n                if (value.status === 200) {\n\n                    var json = value.json();\n\n                    await json.then((value: any) => {\n                        \n\n                        var resultList: PlanoTreino[] = [];\n\n                        for (var i = 0; i < value.length; i++) {\n                            if(value[i]===null) return;\n                            var exerciciosList = value[i].exercicios;\n\n                            var planoRes: any = Object.assign(value[i], {lista_exercicios: exerciciosList, grupos_musculares: value[i].grupo_muscular, tipo: \"esqueceram-se de mim\"});\n                            delete planoRes.exercicios;\n                            delete planoRes.grupo_muscular;\n\n                            \n                            planoRes.lista_exercicios.map((exe: any) => {\n                                \n                                \n                                var newExerc = Object.assign(exe, {nm_repeticoes: exe.repetiçoes, nm_series: exe.series});\n                                delete newExerc.repetiçoes;\n                                delete newExerc.series;\n                                return(\"ok\");\n                            });\n\n                            resultList.push(planoRes);\n                            \n                        }\n                console.log(resultList);\n\n                        \n                        \n\n                        if(resultList.length === 0) \n                            this.setState({lista_plano_treino: [empty]});\n                        else {\n                        //console.log(resultList);\n                        \n                        this.setState({lista_plano_treino: resultList});\n\n                        }\n                    });\n\n                    } \n            });\n    }\n\n    render(){\n\n        console.log(this.state.indice_plano)\n\n    return(\n      <IonPage>\n\n        <IonHeader>\n          <IonToolbar color=\"primary\">\n            <IonTitle id=\"page-title\">Plano Treino</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonContent>\n            \n            <IonGrid>\n\n                    <div className=\"buttonsWrapper\">\n                        <div className=\"leftBut\">\n                        {\n                            (this.state.indice_plano - 1 >= 0) ? (\n                                <IonButton className=\"buttonNextBefore\" disabled={false} onClick={() => this.planoanterior()}>\n                                    Anterior ({this.state.lista_plano_treino[this.state.indice_plano-1].nome})\n                                </IonButton>\n                            ):(\n                                <IonButton className=\"buttonNextBefore\" disabled>\n                                    Anterior\n                                </IonButton>\n                            )\n                    \n                        }\n                        </div>\n                        <div className=\"rightBut\">\n                        {\n                            (this.state.indice_plano + 1 < this.state.lista_plano_treino.length) ? (\n                                <IonButton className=\"buttonNextBefore\" disabled={false} onClick={() => this.proximoplano()}>\n                                    Próximo ({this.state.lista_plano_treino[this.state.indice_plano+1].nome})\n                                </IonButton>\n                            ):(\n                                <IonButton className=\"buttonNextBefore\"  disabled>\n                                    Próximo\n                                </IonButton>\n                            )\n                        }\n                        </div>\n                    </div>\n\n                <IonCard  className=\"background-orange\">\n\n                    <IonRow>\n                        <IonCol className=\"margens-centrar\">\n                    <IonLabel className=\"nome-treino\"> <b>Plano de Treino:</b> <i>{this.state.lista_plano_treino[this.state.indice_plano].nome}</i> (Até <i>...</i>) </IonLabel>\n                        </IonCol>\n                    </IonRow>\n                    \n                    <div className=\"separador\"></div>\n\n                    <IonRow>\n                        {/*\n                        <IonCol>\n                        <div className=\"margens-nomes\">\n                        <IonItem className=\"background-orange\"><IonIcon icon={caretForwardOutline}></IonIcon><b>&nbsp;</b>\n                        <IonLabel className=\"text-title\"><b>Tipo:</b> {this.state.lista_plano_treino[this.state.indice_plano].tipo}</IonLabel>\n                        \n                        </IonItem>\n                        </div>\n                        </IonCol>\n                        */}\n                        <IonCol>\n                        <div className=\"margens-nomes\">\n                        <IonItem className=\"background-orange\"><IonIcon icon={barbellOutline}></IonIcon><b>&nbsp;</b>\n                        <IonLabel className=\"text-title\"><div className=\"responsiveText\"><b>Grupos Musculares:</b> {this.state.lista_plano_treino[this.state.indice_plano].grupos_musculares}</div></IonLabel>\n                        \n                        </IonItem>\n                        </div>\n                        </IonCol>\n\n                        <IonCol>\n                        <div className=\"margens-nomes\">\n                        <IonItem className=\"background-orange\"><IonIcon icon={hourglassOutline}></IonIcon><b>&nbsp;</b>\n                        <IonLabel className=\"text-title\"><div className=\"responsiveText\"><b>Frequência:</b> {this.state.lista_plano_treino[this.state.indice_plano].frequencia}</div></IonLabel>\n                        \n                        </IonItem>\n                        </div>\n                        </IonCol>\n                    </IonRow>\n\n                    <div className=\"separador\"></div>\n\n                    <IonRow>\n                        <div className=\"margens-nomes\">\n                        <IonLabel className=\"text-title\"><div className=\"responsiveText\">Lista de Exercícios:</div> </IonLabel>\n                        </div>\n                    </IonRow>       \n\n                    {\n                        this.state.lista_plano_treino[this.state.indice_plano].lista_exercicios.map((s, i) => (\n                <IonCard key={i} className=\"card-exercicio\">\n\n                    <IonRow>\n                    \n                        <IonCol>  \n\n                            <IonRow className=\"margens-nomes\"> \n                                <IonLabel className=\"nome-exercicio\"><div className=\"responsiveText\">{s.nome}</div></IonLabel>\n                            </IonRow> \n                            \n                            <IonRow className=\"margens-nomes\"> \n                                <IonItem><IonIcon icon={informationOutline}></IonIcon><b>&nbsp;</b>\n                                <IonLabel className=\"text-title\"><div className=\"responsiveText\">Número de Repetições: {s.nm_repeticoes}</div></IonLabel>                        \n                                </IonItem>\n                            </IonRow>  \n\n                            <IonRow className=\"margens-nomes\"> \n                            <IonItem><IonIcon icon={informationOutline}></IonIcon><b>&nbsp;</b>\n                                <IonLabel className=\"text-title\"><div className=\"responsiveText\">Número de Séries: {s.nm_series}</div></IonLabel>                        \n                                </IonItem>\n                            </IonRow> \n\n                        </IonCol>\n\n                            <img className=\"exeImage\" alt=\"a carregar...\" src={this.exercicioToImagem(s.nome)}></img>\n                    </IonRow>\n\n                </IonCard>\n            ))}\n\n                </IonCard>\n            </IonGrid>\n\n        </IonContent>\n \n        \n      </IonPage>\n    );\n    }\n    \n}\n\nexport default ShowPlanoTreino;\n\n"]},"metadata":{},"sourceType":"module"}